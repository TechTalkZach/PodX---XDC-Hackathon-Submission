{
	"id": "f3a97b6888b9dacacfe36174d25ba959",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Favors.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport '../node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol';\r\nimport '../node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol';\r\n\r\n/**\r\n * @notice A Chainlink VRF consumer which uses randomness to mimic the rolling\r\n * of a 20 sided dice\r\n */\r\n\r\n/**\r\n * Request testnet LINK and ETH here: https://faucets.chain.link/\r\n * Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/\r\n */\r\n\r\n\r\ncontract Favors is VRFConsumerBaseV2 {\r\n    // Contract Address of Kudos Token\r\n    // ERC20 erc20Contract = ERC20(\"0x7f7A1D2196A6817bBF075f32C55128876F4E79AA\");\r\n\r\n    uint256 private constant ROLL_IN_PROGRESS = 42;\r\n    VRFCoordinatorV2Interface COORDINATOR;\r\n    // Your subscription ID.\r\n    uint64 s_subscriptionId;\r\n    // Goerli coordinator. For other networks,\r\n    // see https://docs.chain.link/docs/vrf-contracts/#configurations\r\n    address vrfCoordinator = 0x2Ca8E0C643bDe4C2E08ab1fA0da3401AdAD7734D;\r\n    // The gas lane to use, which specifies the maximum gas price to bump to.\r\n    // For a list of available gas lanes on each network, see https://docs.chain.link/docs/vrf-contracts/#configurations\r\n    bytes32 s_keyHash = 0x79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15;\r\n    // Depends on the number of requested values that you want sent to the fulfillRandomWords() function. \r\n    // Storing each word costs about 20,000 gas,\r\n    // Test and adjust this limit based on the network that you select, the size of the request, etc\r\n    uint32 callbackGasLimit = 40000;\r\n    // The default is 3, but you can set this higher.\r\n    uint16 requestConfirmations = 3;\r\n    // For this example, retrieve 1 random value in one request.\r\n    // Cannot exceed VRFCoordinatorV2.MAX_NUM_WORDS.\r\n    uint32 numWords = 1;\r\n    address s_owner;\r\n\r\n    // Array of players to prevent double mint\r\n    address[] public playerAddresses; // store as an array\r\n\r\n    // Function for storing address in playerAddresses Array\r\n     function storePlayer(address roller) public returns(address[] memory){  \r\n        playerAddresses.push(roller);\r\n        return playerAddresses;\r\n    }  \r\n\r\n    // Function for getting player count (length of array)\r\n    function playerCount() public view returns (uint256) {\r\n        return playerAddresses.length;\r\n    }\r\n\r\n    // map rollers to requestIds\r\n    mapping(uint256 => address) private s_rollers;\r\n    // map vrf results to rollers\r\n    mapping(address => uint256) private s_results;\r\n   \r\n\r\n    event DiceRolled(uint256 indexed requestId, address indexed roller);\r\n    event DiceLanded(uint256 indexed requestId, uint256 indexed result);\r\n    /**\r\n     * @notice Constructor inherits VRFConsumerBaseV2\r\n     * @dev NETWORK: Goerli\r\n     * @param subscriptionId subscription id that this consumer contract can use\r\n     */\r\n    constructor(uint64 subscriptionId) VRFConsumerBaseV2(vrfCoordinator) {\r\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\r\n        s_owner = msg.sender;\r\n        s_subscriptionId = subscriptionId;\r\n    }\r\n\r\n      \r\n\r\n    // function buyNFT(uint256 price) external {\r\n    //     erc20Contract.transferFrom(msg.sender, price);\r\n    //     // I'm assuming the `transferFrom` will revert if user\r\n    //     // doesn't have sufficient balance, otherwise, we would need to check\r\n    //     // for the return value and revert if needed\r\n    //    _mint(msg.sender, tokenId, quantity);\r\n    // }\r\n\r\n    /**\r\n     * @notice Requests randomness\r\n     * @dev Warning: if the VRF response is delayed, avoid calling requestRandomness repeatedly\r\n     * as that would give miners/VRF operators latitude about which VRF response arrives first.\r\n     * @dev You must review your implementation details with extreme care.\r\n     * @param roller address of the roller\r\n     */\r\n    function createPlayer(address roller) public onlyOwner returns (uint256 requestId) {\r\n        // Iterate through players array to check if new address\r\n        uint256 players = playerCount();\r\n        for (uint256 i = 0; i < players; i++) {\r\n\t        if (playerAddresses[i] == roller) {\r\n                // Not a new wallet address\r\n                break;\r\n            } else {\r\n                // Store the player in playerAdrresses Array\r\n                storePlayer(roller);\r\n                require(s_results[roller] == 0, 'Already rolled');\r\n                // Will revert if subscription is not set and funded.\r\n                requestId = COORDINATOR.requestRandomWords(\r\n                    s_keyHash,\r\n                    s_subscriptionId,\r\n                    requestConfirmations,\r\n                    callbackGasLimit,\r\n                    numWords\r\n                );\r\n                s_rollers[requestId] = roller;\r\n                s_results[roller] = ROLL_IN_PROGRESS;\r\n                emit DiceRolled(requestId, roller);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @notice Callback function used by VRF Coordinator to return the random number to this contract.\r\n     *\r\n     * @dev Some action on the contract state should be taken here, like storing the result.\r\n     * @dev WARNING: take care to avoid having multiple VRF requests in flight if their order of arrival would result\r\n     * in contract states with different outcomes. Otherwise miners or the VRF operator would could take advantage\r\n     * by controlling the order.\r\n     * @dev The VRF Coordinator will only send this function verified responses, and the parent VRFConsumerBaseV2\r\n     * contract ensures that this method only receives randomness from the designated VRFCoordinator.\r\n     *\r\n     * @param requestId uint256\r\n     * @param randomWords  uint256[] The random result returned by the oracle.\r\n     */\r\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\r\n        uint256 d20Value = (randomWords[0] % 20) + 1;\r\n        s_results[s_rollers[requestId]] = d20Value;\r\n        emit DiceLanded(requestId, d20Value);\r\n    }\r\n    /**\r\n     * @notice Get the favor assigned to the player once the address has rolled\r\n     * @param player address\r\n     * @return favor as a string\r\n     */\r\n    function collectBonus(address player) public view returns (uint8) {\r\n        require(s_results[player] != 0, 'Dice not rolled');\r\n        require(s_results[player] != ROLL_IN_PROGRESS, 'Roll in progress');\r\n        return getBonus(s_results[player]);\r\n    }\r\n\r\n    /**\r\n     * @notice get a random one time bonus from the id\r\n     * @param id uint256\r\n     * @return bonus int\r\n     */\r\n    function getBonus(uint256 id) public pure returns (uint8) {\r\n        // Get random value id location in bonus array\r\n        uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\r\n        \r\n        // Mint that many kudos token to players address using the referenced KudosToken Contract\r\n        // erc20Contract.transferFrom(msg.sender, price);\r\n        return bonus[id - 1];\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == s_owner);\r\n        _;\r\n    }\r\n}\r\n"
			},
			"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"
			},
			"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Favors.sol": {
				"Favors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subscriptionId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"name": "DiceLanded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "roller",
									"type": "address"
								}
							],
							"name": "DiceRolled",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "collectBonus",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "roller",
									"type": "address"
								}
							],
							"name": "createPlayer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getBonus",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playerCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "roller",
									"type": "address"
								}
							],
							"name": "storePlayer",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectBonus(address)": {
								"params": {
									"player": "address"
								},
								"returns": {
									"_0": "favor as a string"
								}
							},
							"constructor": {
								"details": "NETWORK: Goerli",
								"params": {
									"subscriptionId": "subscription id that this consumer contract can use"
								}
							},
							"createPlayer(address)": {
								"details": "Warning: if the VRF response is delayed, avoid calling requestRandomness repeatedly as that would give miners/VRF operators latitude about which VRF response arrives first.You must review your implementation details with extreme care.",
								"params": {
									"roller": "address of the roller"
								}
							},
							"getBonus(uint256)": {
								"params": {
									"id": "uint256"
								},
								"returns": {
									"_0": "bonus int"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Favors.sol\":577:7172  contract Favors is VRFConsumerBaseV2 {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Favors.sol\":1047:1089  0x2Ca8E0C643bDe4C2E08ab1fA0da3401AdAD7734D */\n  0x2ca8e0c643bde4c2e08ab1fa0da3401adad7734d\n    /* \"contracts/Favors.sol\":1022:1089  address vrfCoordinator = 0x2Ca8E0C643bDe4C2E08ab1fA0da3401AdAD7734D */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":1317:1383  0x79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15 */\n  0x79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15\n    /* \"contracts/Favors.sol\":1297:1383  bytes32 s_keyHash = 0x79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15 */\n  0x00\n  shl\n  0x02\n  sstore\n    /* \"contracts/Favors.sol\":1676:1681  40000 */\n  0x9c40\n    /* \"contracts/Favors.sol\":1650:1681  uint32 callbackGasLimit = 40000 */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":1773:1774  3 */\n  0x03\n    /* \"contracts/Favors.sol\":1743:1774  uint16 requestConfirmations = 3 */\n  dup1\n  exp(0x0100, 0x04)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":1919:1920  1 */\n  0x01\n    /* \"contracts/Favors.sol\":1901:1920  uint32 numWords = 1 */\n  0x03\n  exp(0x0100, 0x06)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":2966:3184  constructor(uint64 subscriptionId) VRFConsumerBaseV2(vrfCoordinator) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Favors.sol\":3019:3033  vrfCoordinator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":5616:5631  _vrfCoordinator */\n  dup1\n    /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":5599:5631  vrfCoordinator = _vrfCoordinator */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":5556:5636  constructor(address _vrfCoordinator) {... */\n  pop\n    /* \"contracts/Favors.sol\":3086:3100  vrfCoordinator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Favors.sol\":3046:3057  COORDINATOR */\n  0x00\n  dup1\n    /* \"contracts/Favors.sol\":3046:3101  COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":3122:3132  msg.sender */\n  caller\n    /* \"contracts/Favors.sol\":3112:3119  s_owner */\n  0x03\n  0x0a\n    /* \"contracts/Favors.sol\":3112:3132  s_owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":3162:3176  subscriptionId */\n  dup1\n    /* \"contracts/Favors.sol\":3143:3159  s_subscriptionId */\n  0x00\n  0x14\n    /* \"contracts/Favors.sol\":3143:3176  s_subscriptionId = subscriptionId */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Favors.sol\":2966:3184  constructor(uint64 subscriptionId) VRFConsumerBaseV2(vrfCoordinator) {\r... */\n  pop\n    /* \"contracts/Favors.sol\":577:7172  contract Favors is VRFConsumerBaseV2 {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:148   */\ntag_10:\n    /* \"#utility.yul\":63:68   */\n  0x00\n    /* \"#utility.yul\":94:100   */\n  dup2\n    /* \"#utility.yul\":88:101   */\n  mload\n    /* \"#utility.yul\":79:101   */\n  swap1\n  pop\n    /* \"#utility.yul\":110:142   */\n  tag_12\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":110:142   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:148   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":154:503   */\ntag_3:\n    /* \"#utility.yul\":223:229   */\n  0x00\n    /* \"#utility.yul\":272:274   */\n  0x20\n    /* \"#utility.yul\":260:269   */\n  dup3\n    /* \"#utility.yul\":251:258   */\n  dup5\n    /* \"#utility.yul\":247:270   */\n  sub\n    /* \"#utility.yul\":243:275   */\n  slt\n    /* \"#utility.yul\":240:359   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":278:357   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":240:359   */\ntag_15:\n    /* \"#utility.yul\":398:399   */\n  0x00\n    /* \"#utility.yul\":423:486   */\n  tag_18\n    /* \"#utility.yul\":478:485   */\n  dup5\n    /* \"#utility.yul\":469:475   */\n  dup3\n    /* \"#utility.yul\":458:467   */\n  dup6\n    /* \"#utility.yul\":454:476   */\n  add\n    /* \"#utility.yul\":423:486   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":413:486   */\n  swap2\n  pop\n    /* \"#utility.yul\":369:496   */\n  pop\n    /* \"#utility.yul\":154:503   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":590:691   */\ntag_21:\n    /* \"#utility.yul\":626:633   */\n  0x00\n    /* \"#utility.yul\":666:684   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":659:664   */\n  dup3\n    /* \"#utility.yul\":655:685   */\n  and\n    /* \"#utility.yul\":644:685   */\n  swap1\n  pop\n    /* \"#utility.yul\":590:691   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":820:937   */\ntag_17:\n    /* \"#utility.yul\":929:930   */\n  0x00\n    /* \"#utility.yul\":926:927   */\n  dup1\n    /* \"#utility.yul\":919:931   */\n  revert\n    /* \"#utility.yul\":943:1063   */\ntag_13:\n    /* \"#utility.yul\":1015:1038   */\n  tag_27\n    /* \"#utility.yul\":1032:1037   */\n  dup2\n    /* \"#utility.yul\":1015:1038   */\n  tag_21\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1008:1013   */\n  dup2\n    /* \"#utility.yul\":1005:1039   */\n  eq\n    /* \"#utility.yul\":995:1057   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1053:1054   */\n  0x00\n    /* \"#utility.yul\":1050:1051   */\n  dup1\n    /* \"#utility.yul\":1043:1055   */\n  revert\n    /* \"#utility.yul\":995:1057   */\ntag_28:\n    /* \"#utility.yul\":943:1063   */\n  pop\n  jump\t// out\n    /* \"contracts/Favors.sol\":577:7172  contract Favors is VRFConsumerBaseV2 {\r... */\ntag_8:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7aec2e6420b6fcb778a66c2b9d8fa18a316e494bda11ec5e5a11deee861d114c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Favors.sol\":577:7172  contract Favors is VRFConsumerBaseV2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4aa66b28\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x4aa66b28\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x646f2a16\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcfb09651\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe8ace5d7\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x15c6aee2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fe543e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x302bcc57\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Favors.sol\":1999:2031  address[] public playerAddresses */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Favors.sol\":2345:2446  function playerCount() public view returns (uint256) {\r... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Favors.sol\":6672:7081  function getBonus(uint256 id) public pure returns (uint8) {\r... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Favors.sol\":6281:6538  function collectBonus(address player) public view returns (uint8) {\r... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Favors.sol\":2124:2275  function storePlayer(address roller) public returns(address[] memory){  \r... */\n    tag_8:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Favors.sol\":3946:5016  function createPlayer(address roller) public onlyOwner returns (uint256 requestId) {\r... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Favors.sol\":1999:2031  address[] public playerAddresses */\n    tag_14:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_20:\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6731:6745  vrfCoordinator */\n      immutable(\"0x7aec2e6420b6fcb778a66c2b9d8fa18a316e494bda11ec5e5a11deee861d114c\")\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6717:6745  msg.sender != vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6717:6727  msg.sender */\n      caller\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6717:6745  msg.sender != vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n      tag_47\n      jumpi\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6788:6798  msg.sender */\n      caller\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6800:6814  vrfCoordinator */\n      immutable(\"0x7aec2e6420b6fcb778a66c2b9d8fa18a316e494bda11ec5e5a11deee861d114c\")\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6762:6815  OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator) */\n      mload(0x40)\n      0x1cf993f400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n    tag_47:\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      tag_50\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6846:6855  requestId */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6857:6868  randomWords */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6845  fulfillRandomWords */\n      tag_51\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      jump\t// in\n    tag_50:\n        /* \"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Favors.sol\":2345:2446  function playerCount() public view returns (uint256) {\r... */\n    tag_22:\n        /* \"contracts/Favors.sol\":2389:2396  uint256 */\n      0x00\n        /* \"contracts/Favors.sol\":2416:2431  playerAddresses */\n      0x04\n        /* \"contracts/Favors.sol\":2416:2438  playerAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":2409:2438  return playerAddresses.length */\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":2345:2446  function playerCount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Favors.sol\":6672:7081  function getBonus(uint256 id) public pure returns (uint8) {\r... */\n    tag_27:\n        /* \"contracts/Favors.sol\":6723:6728  uint8 */\n      0x00\n        /* \"contracts/Favors.sol\":6797:6819  uint8[20] memory bonus */\n      dup1\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      mload(0x40)\n      dup1\n      0x0280\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Favors.sol\":6823:6824  1 */\n      0x01\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6825:6826  2 */\n      0x02\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6827:6828  3 */\n      0x03\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6829:6830  4 */\n      0x04\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6831:6832  5 */\n      0x05\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6833:6834  6 */\n      0x06\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6835:6836  7 */\n      0x07\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6837:6838  8 */\n      0x08\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6839:6840  9 */\n      0x09\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6841:6843  10 */\n      0x0a\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6844:6846  11 */\n      0x0b\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6847:6849  12 */\n      0x0c\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6850:6852  13 */\n      0x0d\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6853:6855  14 */\n      0x0e\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6856:6858  15 */\n      0x0f\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6859:6861  16 */\n      0x10\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6862:6864  17 */\n      0x11\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6865:6867  18 */\n      0x12\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6868:6870  19 */\n      0x13\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Favors.sol\":6871:6873  20 */\n      0x14\n        /* \"contracts/Favors.sol\":6797:6874  uint8[20] memory bonus = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20] */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":7060:7065  bonus */\n      dup1\n        /* \"contracts/Favors.sol\":7071:7072  1 */\n      0x01\n        /* \"contracts/Favors.sol\":7066:7068  id */\n      dup5\n        /* \"contracts/Favors.sol\":7066:7072  id - 1 */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/Favors.sol\":7060:7073  bonus[id - 1] */\n      0x14\n      dup2\n      lt\n      tag_56\n      jumpi\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n    tag_56:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Favors.sol\":7053:7073  return bonus[id - 1] */\n      swap2\n      pop\n      pop\n        /* \"contracts/Favors.sol\":6672:7081  function getBonus(uint256 id) public pure returns (uint8) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Favors.sol\":6281:6538  function collectBonus(address player) public view returns (uint8) {\r... */\n    tag_33:\n        /* \"contracts/Favors.sol\":6340:6345  uint8 */\n      0x00\n        /* \"contracts/Favors.sol\":6387:6388  0 */\n      dup1\n        /* \"contracts/Favors.sol\":6366:6375  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":6366:6383  s_results[player] */\n      0x00\n        /* \"contracts/Favors.sol\":6376:6382  player */\n      dup5\n        /* \"contracts/Favors.sol\":6366:6383  s_results[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Favors.sol\":6366:6388  s_results[player] != 0 */\n      eq\n      iszero\n        /* \"contracts/Favors.sol\":6358:6408  require(s_results[player] != 0, 'Dice not rolled') */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/Favors.sol\":790:792  42 */\n      0x2a\n        /* \"contracts/Favors.sol\":6427:6436  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":6427:6444  s_results[player] */\n      0x00\n        /* \"contracts/Favors.sol\":6437:6443  player */\n      dup5\n        /* \"contracts/Favors.sol\":6427:6444  s_results[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Favors.sol\":6427:6464  s_results[player] != ROLL_IN_PROGRESS */\n      eq\n      iszero\n        /* \"contracts/Favors.sol\":6419:6485  require(s_results[player] != ROLL_IN_PROGRESS, 'Roll in progress') */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/Favors.sol\":6503:6530  getBonus(s_results[player]) */\n      tag_66\n        /* \"contracts/Favors.sol\":6512:6521  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":6512:6529  s_results[player] */\n      0x00\n        /* \"contracts/Favors.sol\":6522:6528  player */\n      dup5\n        /* \"contracts/Favors.sol\":6512:6529  s_results[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Favors.sol\":6503:6511  getBonus */\n      tag_27\n        /* \"contracts/Favors.sol\":6503:6530  getBonus(s_results[player]) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/Favors.sol\":6496:6530  return getBonus(s_results[player]) */\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":6281:6538  function collectBonus(address player) public view returns (uint8) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Favors.sol\":2124:2275  function storePlayer(address roller) public returns(address[] memory){  \r... */\n    tag_37:\n        /* \"contracts/Favors.sol\":2176:2192  address[] memory */\n      0x60\n        /* \"contracts/Favors.sol\":2206:2221  playerAddresses */\n      0x04\n        /* \"contracts/Favors.sol\":2227:2233  roller */\n      dup3\n        /* \"contracts/Favors.sol\":2206:2234  playerAddresses.push(roller) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Favors.sol\":2252:2267  playerAddresses */\n      0x04\n        /* \"contracts/Favors.sol\":2245:2267  return playerAddresses */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":2124:2275  function storePlayer(address roller) public returns(address[] memory){  \r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Favors.sol\":3946:5016  function createPlayer(address roller) public onlyOwner returns (uint256 requestId) {\r... */\n    tag_42:\n        /* \"contracts/Favors.sol\":4010:4027  uint256 requestId */\n      0x00\n        /* \"contracts/Favors.sol\":7141:7148  s_owner */\n      0x03\n      0x0a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":7127:7148  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/Favors.sol\":7127:7148  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Favors.sol\":7119:7149  require(msg.sender == s_owner) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/Favors.sol\":4106:4121  uint256 players */\n      0x00\n        /* \"contracts/Favors.sol\":4124:4137  playerCount() */\n      tag_74\n        /* \"contracts/Favors.sol\":4124:4135  playerCount */\n      tag_22\n        /* \"contracts/Favors.sol\":4124:4137  playerCount() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Favors.sol\":4106:4137  uint256 players = playerCount() */\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":4153:4162  uint256 i */\n      0x00\n        /* \"contracts/Favors.sol\":4148:5009  for (uint256 i = 0; i < players; i++) {\r... */\n    tag_75:\n        /* \"contracts/Favors.sol\":4172:4179  players */\n      dup2\n        /* \"contracts/Favors.sol\":4168:4169  i */\n      dup2\n        /* \"contracts/Favors.sol\":4168:4179  i < players */\n      lt\n        /* \"contracts/Favors.sol\":4148:5009  for (uint256 i = 0; i < players; i++) {\r... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/Favors.sol\":4224:4230  roller */\n      dup4\n        /* \"contracts/Favors.sol\":4202:4230  playerAddresses[i] == roller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":4202:4217  playerAddresses */\n      0x04\n        /* \"contracts/Favors.sol\":4218:4219  i */\n      dup3\n        /* \"contracts/Favors.sol\":4202:4220  playerAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_58\n      jump\t// in\n    tag_79:\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":4202:4230  playerAddresses[i] == roller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Favors.sol\":4198:4998  if (playerAddresses[i] == roller) {\r... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/Favors.sol\":4296:4301  break */\n      jump(tag_76)\n        /* \"contracts/Favors.sol\":4198:4998  if (playerAddresses[i] == roller) {\r... */\n    tag_81:\n        /* \"contracts/Favors.sol\":4404:4423  storePlayer(roller) */\n      tag_83\n        /* \"contracts/Favors.sol\":4416:4422  roller */\n      dup5\n        /* \"contracts/Favors.sol\":4404:4415  storePlayer */\n      tag_37\n        /* \"contracts/Favors.sol\":4404:4423  storePlayer(roller) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/Favors.sol\":4471:4472  0 */\n      0x00\n        /* \"contracts/Favors.sol\":4450:4459  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":4450:4467  s_results[roller] */\n      0x00\n        /* \"contracts/Favors.sol\":4460:4466  roller */\n      dup7\n        /* \"contracts/Favors.sol\":4450:4467  s_results[roller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Favors.sol\":4450:4472  s_results[roller] == 0 */\n      eq\n        /* \"contracts/Favors.sol\":4442:4491  require(s_results[roller] == 0, 'Already rolled') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/Favors.sol\":4593:4604  COORDINATOR */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":4593:4623  COORDINATOR.requestRandomWords */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5d3b1d30\n        /* \"contracts/Favors.sol\":4646:4655  s_keyHash */\n      sload(0x02)\n        /* \"contracts/Favors.sol\":4678:4694  s_subscriptionId */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":4717:4737  requestConfirmations */\n      0x03\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/Favors.sol\":4760:4776  callbackGasLimit */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/Favors.sol\":4799:4807  numWords */\n      0x03\n      0x06\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/Favors.sol\":4593:4826  COORDINATOR.requestRandomWords(\r... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/Favors.sol\":4581:4826  requestId = COORDINATOR.requestRandomWords(\r... */\n      swap3\n      pop\n        /* \"contracts/Favors.sol\":4868:4874  roller */\n      dup4\n        /* \"contracts/Favors.sol\":4845:4854  s_rollers */\n      0x05\n        /* \"contracts/Favors.sol\":4845:4865  s_rollers[requestId] */\n      0x00\n        /* \"contracts/Favors.sol\":4855:4864  requestId */\n      dup6\n        /* \"contracts/Favors.sol\":4845:4865  s_rollers[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Favors.sol\":4845:4874  s_rollers[requestId] = roller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Favors.sol\":790:792  42 */\n      0x2a\n        /* \"contracts/Favors.sol\":4893:4902  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":4893:4910  s_results[roller] */\n      0x00\n        /* \"contracts/Favors.sol\":4903:4909  roller */\n      dup7\n        /* \"contracts/Favors.sol\":4893:4910  s_results[roller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Favors.sol\":4893:4929  s_results[roller] = ROLL_IN_PROGRESS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Favors.sol\":4975:4981  roller */\n      dup4\n        /* \"contracts/Favors.sol\":4953:4982  DiceRolled(requestId, roller) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":4964:4973  requestId */\n      dup4\n        /* \"contracts/Favors.sol\":4953:4982  DiceRolled(requestId, roller) */\n      0x3e7fdeab84c01ce5308321caa0b460e1c4ec3c7099223d79634d9a71d99932e3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Favors.sol\":4181:4184  i++ */\n      dup1\n      dup1\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      swap2\n      pop\n      pop\n        /* \"contracts/Favors.sol\":4148:5009  for (uint256 i = 0; i < players; i++) {\r... */\n      jump(tag_75)\n    tag_76:\n      pop\n        /* \"contracts/Favors.sol\":4029:5016  {\r... */\n      pop\n        /* \"contracts/Favors.sol\":3946:5016  function createPlayer(address roller) public onlyOwner returns (uint256 requestId) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Favors.sol\":5854:6112  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\r... */\n    tag_51:\n        /* \"contracts/Favors.sol\":5960:5976  uint256 d20Value */\n      0x00\n        /* \"contracts/Favors.sol\":6003:6004  1 */\n      0x01\n        /* \"contracts/Favors.sol\":5997:5999  20 */\n      0x14\n        /* \"contracts/Favors.sol\":5980:5991  randomWords */\n      dup4\n        /* \"contracts/Favors.sol\":5992:5993  0 */\n      0x00\n        /* \"contracts/Favors.sol\":5980:5994  randomWords[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_58\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Favors.sol\":5980:5999  randomWords[0] % 20 */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"contracts/Favors.sol\":5979:6004  (randomWords[0] % 20) + 1 */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"contracts/Favors.sol\":5960:6004  uint256 d20Value = (randomWords[0] % 20) + 1 */\n      swap1\n      pop\n        /* \"contracts/Favors.sol\":6049:6057  d20Value */\n      dup1\n        /* \"contracts/Favors.sol\":6015:6024  s_results */\n      0x06\n        /* \"contracts/Favors.sol\":6015:6046  s_results[s_rollers[requestId]] */\n      0x00\n        /* \"contracts/Favors.sol\":6025:6034  s_rollers */\n      0x05\n        /* \"contracts/Favors.sol\":6025:6045  s_rollers[requestId] */\n      0x00\n        /* \"contracts/Favors.sol\":6035:6044  requestId */\n      dup8\n        /* \"contracts/Favors.sol\":6025:6045  s_rollers[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Favors.sol\":6015:6046  s_results[s_rollers[requestId]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Favors.sol\":6015:6057  s_results[s_rollers[requestId]] = d20Value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Favors.sol\":6095:6103  d20Value */\n      dup1\n        /* \"contracts/Favors.sol\":6084:6093  requestId */\n      dup4\n        /* \"contracts/Favors.sol\":6073:6104  DiceLanded(requestId, d20Value) */\n      0x54d97c1f7e5abad75bd421455cd4dd296852a52e1ea721f2cdb66d06fa2082a9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Favors.sol\":5949:6112  {\r... */\n      pop\n        /* \"contracts/Favors.sol\":5854:6112  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_104:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_106\n        /* \"#utility.yul\":161:225   */\n      tag_107\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":145:226   */\n      tag_109\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":350:493   */\n    tag_110:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_113:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_116\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_113)\n    tag_115:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:891   */\n    tag_118:\n        /* \"#utility.yul\":798:803   */\n      0x00\n        /* \"#utility.yul\":836:842   */\n      dup2\n        /* \"#utility.yul\":823:843   */\n      calldataload\n        /* \"#utility.yul\":814:843   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:885   */\n      tag_120\n        /* \"#utility.yul\":879:884   */\n      dup2\n        /* \"#utility.yul\":852:885   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":752:891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":914:1284   */\n    tag_122:\n        /* \"#utility.yul\":985:990   */\n      0x00\n        /* \"#utility.yul\":1034:1037   */\n      dup3\n        /* \"#utility.yul\":1027:1031   */\n      0x1f\n        /* \"#utility.yul\":1019:1025   */\n      dup4\n        /* \"#utility.yul\":1015:1032   */\n      add\n        /* \"#utility.yul\":1011:1038   */\n      slt\n        /* \"#utility.yul\":1001:1123   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":1042:1121   */\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1001:1123   */\n    tag_124:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1146:1166   */\n      calldataload\n        /* \"#utility.yul\":1184:1278   */\n      tag_127\n        /* \"#utility.yul\":1274:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1272   */\n      dup3\n        /* \"#utility.yul\":1259:1263   */\n      0x20\n        /* \"#utility.yul\":1251:1257   */\n      dup7\n        /* \"#utility.yul\":1247:1264   */\n      add\n        /* \"#utility.yul\":1184:1278   */\n      tag_104\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1175:1278   */\n      swap2\n      pop\n        /* \"#utility.yul\":991:1284   */\n      pop\n        /* \"#utility.yul\":914:1284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1290:1429   */\n    tag_117:\n        /* \"#utility.yul\":1336:1341   */\n      0x00\n        /* \"#utility.yul\":1374:1380   */\n      dup2\n        /* \"#utility.yul\":1361:1381   */\n      calldataload\n        /* \"#utility.yul\":1352:1381   */\n      swap1\n      pop\n        /* \"#utility.yul\":1390:1423   */\n      tag_129\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1390:1423   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1290:1429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1435:1578   */\n    tag_131:\n        /* \"#utility.yul\":1492:1497   */\n      0x00\n        /* \"#utility.yul\":1523:1529   */\n      dup2\n        /* \"#utility.yul\":1517:1530   */\n      mload\n        /* \"#utility.yul\":1508:1530   */\n      swap1\n      pop\n        /* \"#utility.yul\":1539:1572   */\n      tag_133\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1539:1572   */\n      tag_130\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1435:1578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1913   */\n    tag_32:\n        /* \"#utility.yul\":1643:1649   */\n      0x00\n        /* \"#utility.yul\":1692:1694   */\n      0x20\n        /* \"#utility.yul\":1680:1689   */\n      dup3\n        /* \"#utility.yul\":1671:1678   */\n      dup5\n        /* \"#utility.yul\":1667:1690   */\n      sub\n        /* \"#utility.yul\":1663:1695   */\n      slt\n        /* \"#utility.yul\":1660:1779   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1698:1777   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1660:1779   */\n    tag_135:\n        /* \"#utility.yul\":1818:1819   */\n      0x00\n        /* \"#utility.yul\":1843:1896   */\n      tag_138\n        /* \"#utility.yul\":1888:1895   */\n      dup5\n        /* \"#utility.yul\":1879:1885   */\n      dup3\n        /* \"#utility.yul\":1868:1877   */\n      dup6\n        /* \"#utility.yul\":1864:1886   */\n      add\n        /* \"#utility.yul\":1843:1896   */\n      tag_118\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1833:1896   */\n      swap2\n      pop\n        /* \"#utility.yul\":1789:1906   */\n      pop\n        /* \"#utility.yul\":1584:1913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2248   */\n    tag_13:\n        /* \"#utility.yul\":1978:1984   */\n      0x00\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2015:2024   */\n      dup3\n        /* \"#utility.yul\":2006:2013   */\n      dup5\n        /* \"#utility.yul\":2002:2025   */\n      sub\n        /* \"#utility.yul\":1998:2030   */\n      slt\n        /* \"#utility.yul\":1995:2114   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2033:2112   */\n      tag_141\n      tag_137\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1995:2114   */\n    tag_140:\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2178:2231   */\n      tag_142\n        /* \"#utility.yul\":2223:2230   */\n      dup5\n        /* \"#utility.yul\":2214:2220   */\n      dup3\n        /* \"#utility.yul\":2203:2212   */\n      dup6\n        /* \"#utility.yul\":2199:2221   */\n      add\n        /* \"#utility.yul\":2178:2231   */\n      tag_117\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2168:2231   */\n      swap2\n      pop\n        /* \"#utility.yul\":2124:2241   */\n      pop\n        /* \"#utility.yul\":1919:2248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2254:2605   */\n    tag_93:\n        /* \"#utility.yul\":2324:2330   */\n      0x00\n        /* \"#utility.yul\":2373:2375   */\n      0x20\n        /* \"#utility.yul\":2361:2370   */\n      dup3\n        /* \"#utility.yul\":2352:2359   */\n      dup5\n        /* \"#utility.yul\":2348:2371   */\n      sub\n        /* \"#utility.yul\":2344:2376   */\n      slt\n        /* \"#utility.yul\":2341:2460   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2379:2458   */\n      tag_145\n      tag_137\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2341:2460   */\n    tag_144:\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2524:2588   */\n      tag_146\n        /* \"#utility.yul\":2580:2587   */\n      dup5\n        /* \"#utility.yul\":2571:2577   */\n      dup3\n        /* \"#utility.yul\":2560:2569   */\n      dup6\n        /* \"#utility.yul\":2556:2578   */\n      add\n        /* \"#utility.yul\":2524:2588   */\n      tag_131\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2514:2588   */\n      swap2\n      pop\n        /* \"#utility.yul\":2470:2598   */\n      pop\n        /* \"#utility.yul\":2254:2605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:3295   */\n    tag_19:\n        /* \"#utility.yul\":2704:2710   */\n      0x00\n        /* \"#utility.yul\":2712:2718   */\n      dup1\n        /* \"#utility.yul\":2761:2763   */\n      0x40\n        /* \"#utility.yul\":2749:2758   */\n      dup4\n        /* \"#utility.yul\":2740:2747   */\n      dup6\n        /* \"#utility.yul\":2736:2759   */\n      sub\n        /* \"#utility.yul\":2732:2764   */\n      slt\n        /* \"#utility.yul\":2729:2848   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2767:2846   */\n      tag_149\n      tag_137\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2729:2848   */\n    tag_148:\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2912:2965   */\n      tag_150\n        /* \"#utility.yul\":2957:2964   */\n      dup6\n        /* \"#utility.yul\":2948:2954   */\n      dup3\n        /* \"#utility.yul\":2937:2946   */\n      dup7\n        /* \"#utility.yul\":2933:2955   */\n      add\n        /* \"#utility.yul\":2912:2965   */\n      tag_117\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2902:2965   */\n      swap3\n      pop\n        /* \"#utility.yul\":2858:2975   */\n      pop\n        /* \"#utility.yul\":3042:3044   */\n      0x20\n        /* \"#utility.yul\":3031:3040   */\n      dup4\n        /* \"#utility.yul\":3027:3045   */\n      add\n        /* \"#utility.yul\":3014:3046   */\n      calldataload\n        /* \"#utility.yul\":3073:3091   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3065:3071   */\n      dup2\n        /* \"#utility.yul\":3062:3092   */\n      gt\n        /* \"#utility.yul\":3059:3176   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3095:3174   */\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3059:3176   */\n    tag_151:\n        /* \"#utility.yul\":3200:3278   */\n      tag_154\n        /* \"#utility.yul\":3270:3277   */\n      dup6\n        /* \"#utility.yul\":3261:3267   */\n      dup3\n        /* \"#utility.yul\":3250:3259   */\n      dup7\n        /* \"#utility.yul\":3246:3268   */\n      add\n        /* \"#utility.yul\":3200:3278   */\n      tag_122\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3190:3278   */\n      swap2\n      pop\n        /* \"#utility.yul\":2985:3288   */\n      pop\n        /* \"#utility.yul\":2611:3295   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3480   */\n    tag_155:\n        /* \"#utility.yul\":3370:3380   */\n      0x00\n        /* \"#utility.yul\":3391:3437   */\n      tag_157\n        /* \"#utility.yul\":3433:3436   */\n      dup4\n        /* \"#utility.yul\":3425:3431   */\n      dup4\n        /* \"#utility.yul\":3391:3437   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3469:3473   */\n      0x20\n        /* \"#utility.yul\":3464:3467   */\n      dup4\n        /* \"#utility.yul\":3460:3474   */\n      add\n        /* \"#utility.yul\":3446:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3301:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3594   */\n    tag_158:\n        /* \"#utility.yul\":3563:3587   */\n      tag_160\n        /* \"#utility.yul\":3581:3586   */\n      dup2\n        /* \"#utility.yul\":3563:3587   */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3558:3561   */\n      dup3\n        /* \"#utility.yul\":3551:3588   */\n      mstore\n        /* \"#utility.yul\":3486:3594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:3718   */\n    tag_162:\n        /* \"#utility.yul\":3687:3711   */\n      tag_164\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3687:3711   */\n      tag_161\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3682:3685   */\n      dup3\n        /* \"#utility.yul\":3675:3712   */\n      mstore\n        /* \"#utility.yul\":3600:3718   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3754:4486   */\n    tag_165:\n        /* \"#utility.yul\":3873:3876   */\n      0x00\n        /* \"#utility.yul\":3902:3956   */\n      tag_167\n        /* \"#utility.yul\":3950:3955   */\n      dup3\n        /* \"#utility.yul\":3902:3956   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3972:4058   */\n      tag_169\n        /* \"#utility.yul\":4051:4057   */\n      dup2\n        /* \"#utility.yul\":4046:4049   */\n      dup6\n        /* \"#utility.yul\":3972:4058   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3965:4058   */\n      swap4\n      pop\n        /* \"#utility.yul\":4082:4138   */\n      tag_171\n        /* \"#utility.yul\":4132:4137   */\n      dup4\n        /* \"#utility.yul\":4082:4138   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4161:4168   */\n      dup1\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4177:4461   */\n    tag_173:\n        /* \"#utility.yul\":4202:4208   */\n      dup4\n        /* \"#utility.yul\":4199:4200   */\n      dup2\n        /* \"#utility.yul\":4196:4209   */\n      lt\n        /* \"#utility.yul\":4177:4461   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":4278:4284   */\n      dup2\n        /* \"#utility.yul\":4272:4285   */\n      mload\n        /* \"#utility.yul\":4305:4368   */\n      tag_176\n        /* \"#utility.yul\":4364:4367   */\n      dup9\n        /* \"#utility.yul\":4349:4362   */\n      dup3\n        /* \"#utility.yul\":4305:4368   */\n      tag_155\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4298:4368   */\n      swap8\n      pop\n        /* \"#utility.yul\":4391:4451   */\n      tag_177\n        /* \"#utility.yul\":4444:4450   */\n      dup4\n        /* \"#utility.yul\":4391:4451   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4381:4451   */\n      swap3\n      pop\n        /* \"#utility.yul\":4237:4461   */\n      pop\n        /* \"#utility.yul\":4224:4225   */\n      0x01\n        /* \"#utility.yul\":4221:4222   */\n      dup2\n        /* \"#utility.yul\":4217:4226   */\n      add\n        /* \"#utility.yul\":4212:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4177:4461   */\n      jump(tag_173)\n    tag_175:\n        /* \"#utility.yul\":4181:4195   */\n      pop\n        /* \"#utility.yul\":4477:4480   */\n      dup6\n        /* \"#utility.yul\":4470:4480   */\n      swap4\n      pop\n        /* \"#utility.yul\":3878:4486   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3754:4486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4492:4610   */\n    tag_179:\n        /* \"#utility.yul\":4579:4603   */\n      tag_181\n        /* \"#utility.yul\":4597:4602   */\n      dup2\n        /* \"#utility.yul\":4579:4603   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4574:4577   */\n      dup3\n        /* \"#utility.yul\":4567:4604   */\n      mstore\n        /* \"#utility.yul\":4492:4610   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4616:4982   */\n    tag_183:\n        /* \"#utility.yul\":4758:4761   */\n      0x00\n        /* \"#utility.yul\":4779:4846   */\n      tag_185\n        /* \"#utility.yul\":4843:4845   */\n      0x10\n        /* \"#utility.yul\":4838:4841   */\n      dup4\n        /* \"#utility.yul\":4779:4846   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4772:4846   */\n      swap2\n      pop\n        /* \"#utility.yul\":4855:4948   */\n      tag_187\n        /* \"#utility.yul\":4944:4947   */\n      dup3\n        /* \"#utility.yul\":4855:4948   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4973:4975   */\n      0x20\n        /* \"#utility.yul\":4968:4971   */\n      dup3\n        /* \"#utility.yul\":4964:4976   */\n      add\n        /* \"#utility.yul\":4957:4976   */\n      swap1\n      pop\n        /* \"#utility.yul\":4616:4982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4988:5354   */\n    tag_189:\n        /* \"#utility.yul\":5130:5133   */\n      0x00\n        /* \"#utility.yul\":5151:5218   */\n      tag_191\n        /* \"#utility.yul\":5215:5217   */\n      0x0f\n        /* \"#utility.yul\":5210:5213   */\n      dup4\n        /* \"#utility.yul\":5151:5218   */\n      tag_186\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5144:5218   */\n      swap2\n      pop\n        /* \"#utility.yul\":5227:5320   */\n      tag_192\n        /* \"#utility.yul\":5316:5319   */\n      dup3\n        /* \"#utility.yul\":5227:5320   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5345:5347   */\n      0x20\n        /* \"#utility.yul\":5340:5343   */\n      dup3\n        /* \"#utility.yul\":5336:5348   */\n      add\n        /* \"#utility.yul\":5329:5348   */\n      swap1\n      pop\n        /* \"#utility.yul\":4988:5354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5360:5726   */\n    tag_194:\n        /* \"#utility.yul\":5502:5505   */\n      0x00\n        /* \"#utility.yul\":5523:5590   */\n      tag_196\n        /* \"#utility.yul\":5587:5589   */\n      0x0e\n        /* \"#utility.yul\":5582:5585   */\n      dup4\n        /* \"#utility.yul\":5523:5590   */\n      tag_186\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5516:5590   */\n      swap2\n      pop\n        /* \"#utility.yul\":5599:5692   */\n      tag_197\n        /* \"#utility.yul\":5688:5691   */\n      dup3\n        /* \"#utility.yul\":5599:5692   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5717:5719   */\n      0x20\n        /* \"#utility.yul\":5712:5715   */\n      dup3\n        /* \"#utility.yul\":5708:5720   */\n      add\n        /* \"#utility.yul\":5701:5720   */\n      swap1\n      pop\n        /* \"#utility.yul\":5360:5726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5732:5847   */\n    tag_199:\n        /* \"#utility.yul\":5817:5840   */\n      tag_201\n        /* \"#utility.yul\":5834:5839   */\n      dup2\n        /* \"#utility.yul\":5817:5840   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5812:5815   */\n      dup3\n        /* \"#utility.yul\":5805:5841   */\n      mstore\n        /* \"#utility.yul\":5732:5847   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5853:5971   */\n    tag_203:\n        /* \"#utility.yul\":5940:5964   */\n      tag_205\n        /* \"#utility.yul\":5958:5963   */\n      dup2\n        /* \"#utility.yul\":5940:5964   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5935:5938   */\n      dup3\n        /* \"#utility.yul\":5928:5965   */\n      mstore\n        /* \"#utility.yul\":5853:5971   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6092   */\n    tag_207:\n        /* \"#utility.yul\":6062:6085   */\n      tag_209\n        /* \"#utility.yul\":6079:6084   */\n      dup2\n        /* \"#utility.yul\":6062:6085   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6057:6060   */\n      dup3\n        /* \"#utility.yul\":6050:6086   */\n      mstore\n        /* \"#utility.yul\":5977:6092   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6213   */\n    tag_211:\n        /* \"#utility.yul\":6183:6206   */\n      tag_213\n        /* \"#utility.yul\":6200:6205   */\n      dup2\n        /* \"#utility.yul\":6183:6206   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6178:6181   */\n      dup3\n        /* \"#utility.yul\":6171:6207   */\n      mstore\n        /* \"#utility.yul\":6098:6213   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6219:6331   */\n    tag_215:\n        /* \"#utility.yul\":6302:6324   */\n      tag_217\n        /* \"#utility.yul\":6318:6323   */\n      dup2\n        /* \"#utility.yul\":6302:6324   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6297:6300   */\n      dup3\n        /* \"#utility.yul\":6290:6325   */\n      mstore\n        /* \"#utility.yul\":6219:6331   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6559   */\n    tag_16:\n        /* \"#utility.yul\":6430:6434   */\n      0x00\n        /* \"#utility.yul\":6468:6470   */\n      0x20\n        /* \"#utility.yul\":6457:6466   */\n      dup3\n        /* \"#utility.yul\":6453:6471   */\n      add\n        /* \"#utility.yul\":6445:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6481:6552   */\n      tag_220\n        /* \"#utility.yul\":6549:6550   */\n      0x00\n        /* \"#utility.yul\":6538:6547   */\n      dup4\n        /* \"#utility.yul\":6534:6551   */\n      add\n        /* \"#utility.yul\":6525:6531   */\n      dup5\n        /* \"#utility.yul\":6481:6552   */\n      tag_162\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6337:6559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6565:6897   */\n    tag_49:\n        /* \"#utility.yul\":6686:6690   */\n      0x00\n        /* \"#utility.yul\":6724:6726   */\n      0x40\n        /* \"#utility.yul\":6713:6722   */\n      dup3\n        /* \"#utility.yul\":6709:6727   */\n      add\n        /* \"#utility.yul\":6701:6727   */\n      swap1\n      pop\n        /* \"#utility.yul\":6737:6808   */\n      tag_222\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6794:6803   */\n      dup4\n        /* \"#utility.yul\":6790:6807   */\n      add\n        /* \"#utility.yul\":6781:6787   */\n      dup6\n        /* \"#utility.yul\":6737:6808   */\n      tag_162\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6818:6890   */\n      tag_223\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6875:6884   */\n      dup4\n        /* \"#utility.yul\":6871:6889   */\n      add\n        /* \"#utility.yul\":6862:6868   */\n      dup5\n        /* \"#utility.yul\":6818:6890   */\n      tag_162\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6565:6897   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6903:7276   */\n    tag_39:\n        /* \"#utility.yul\":7046:7050   */\n      0x00\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7073:7082   */\n      dup3\n        /* \"#utility.yul\":7069:7087   */\n      add\n        /* \"#utility.yul\":7061:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":7133:7142   */\n      dup2\n        /* \"#utility.yul\":7127:7131   */\n      dup2\n        /* \"#utility.yul\":7123:7143   */\n      sub\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7108:7117   */\n      dup4\n        /* \"#utility.yul\":7104:7121   */\n      add\n        /* \"#utility.yul\":7097:7144   */\n      mstore\n        /* \"#utility.yul\":7161:7269   */\n      tag_225\n        /* \"#utility.yul\":7264:7268   */\n      dup2\n        /* \"#utility.yul\":7255:7261   */\n      dup5\n        /* \"#utility.yul\":7161:7269   */\n      tag_165\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7153:7269   */\n      swap1\n      pop\n        /* \"#utility.yul\":6903:7276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7282:7930   */\n    tag_88:\n        /* \"#utility.yul\":7479:7483   */\n      0x00\n        /* \"#utility.yul\":7517:7520   */\n      0xa0\n        /* \"#utility.yul\":7506:7515   */\n      dup3\n        /* \"#utility.yul\":7502:7521   */\n      add\n        /* \"#utility.yul\":7494:7521   */\n      swap1\n      pop\n        /* \"#utility.yul\":7531:7602   */\n      tag_227\n        /* \"#utility.yul\":7599:7600   */\n      0x00\n        /* \"#utility.yul\":7588:7597   */\n      dup4\n        /* \"#utility.yul\":7584:7601   */\n      add\n        /* \"#utility.yul\":7575:7581   */\n      dup9\n        /* \"#utility.yul\":7531:7602   */\n      tag_179\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7612:7682   */\n      tag_228\n        /* \"#utility.yul\":7678:7680   */\n      0x20\n        /* \"#utility.yul\":7667:7676   */\n      dup4\n        /* \"#utility.yul\":7663:7681   */\n      add\n        /* \"#utility.yul\":7654:7660   */\n      dup8\n        /* \"#utility.yul\":7612:7682   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7692:7762   */\n      tag_229\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup4\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7734:7740   */\n      dup7\n        /* \"#utility.yul\":7692:7762   */\n      tag_199\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7772:7842   */\n      tag_230\n        /* \"#utility.yul\":7838:7840   */\n      0x60\n        /* \"#utility.yul\":7827:7836   */\n      dup4\n        /* \"#utility.yul\":7823:7841   */\n      add\n        /* \"#utility.yul\":7814:7820   */\n      dup6\n        /* \"#utility.yul\":7772:7842   */\n      tag_207\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7852:7923   */\n      tag_231\n        /* \"#utility.yul\":7918:7921   */\n      0x80\n        /* \"#utility.yul\":7907:7916   */\n      dup4\n        /* \"#utility.yul\":7903:7922   */\n      add\n        /* \"#utility.yul\":7894:7900   */\n      dup5\n        /* \"#utility.yul\":7852:7923   */\n      tag_207\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7282:7930   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7936:8355   */\n    tag_65:\n        /* \"#utility.yul\":8102:8106   */\n      0x00\n        /* \"#utility.yul\":8140:8142   */\n      0x20\n        /* \"#utility.yul\":8129:8138   */\n      dup3\n        /* \"#utility.yul\":8125:8143   */\n      add\n        /* \"#utility.yul\":8117:8143   */\n      swap1\n      pop\n        /* \"#utility.yul\":8189:8198   */\n      dup2\n        /* \"#utility.yul\":8183:8187   */\n      dup2\n        /* \"#utility.yul\":8179:8199   */\n      sub\n        /* \"#utility.yul\":8175:8176   */\n      0x00\n        /* \"#utility.yul\":8164:8173   */\n      dup4\n        /* \"#utility.yul\":8160:8177   */\n      add\n        /* \"#utility.yul\":8153:8200   */\n      mstore\n        /* \"#utility.yul\":8217:8348   */\n      tag_233\n        /* \"#utility.yul\":8343:8347   */\n      dup2\n        /* \"#utility.yul\":8217:8348   */\n      tag_183\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8209:8348   */\n      swap1\n      pop\n        /* \"#utility.yul\":7936:8355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8361:8780   */\n    tag_62:\n        /* \"#utility.yul\":8527:8531   */\n      0x00\n        /* \"#utility.yul\":8565:8567   */\n      0x20\n        /* \"#utility.yul\":8554:8563   */\n      dup3\n        /* \"#utility.yul\":8550:8568   */\n      add\n        /* \"#utility.yul\":8542:8568   */\n      swap1\n      pop\n        /* \"#utility.yul\":8614:8623   */\n      dup2\n        /* \"#utility.yul\":8608:8612   */\n      dup2\n        /* \"#utility.yul\":8604:8624   */\n      sub\n        /* \"#utility.yul\":8600:8601   */\n      0x00\n        /* \"#utility.yul\":8589:8598   */\n      dup4\n        /* \"#utility.yul\":8585:8602   */\n      add\n        /* \"#utility.yul\":8578:8625   */\n      mstore\n        /* \"#utility.yul\":8642:8773   */\n      tag_235\n        /* \"#utility.yul\":8768:8772   */\n      dup2\n        /* \"#utility.yul\":8642:8773   */\n      tag_189\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8634:8773   */\n      swap1\n      pop\n        /* \"#utility.yul\":8361:8780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8786:9205   */\n    tag_86:\n        /* \"#utility.yul\":8952:8956   */\n      0x00\n        /* \"#utility.yul\":8990:8992   */\n      0x20\n        /* \"#utility.yul\":8979:8988   */\n      dup3\n        /* \"#utility.yul\":8975:8993   */\n      add\n        /* \"#utility.yul\":8967:8993   */\n      swap1\n      pop\n        /* \"#utility.yul\":9039:9048   */\n      dup2\n        /* \"#utility.yul\":9033:9037   */\n      dup2\n        /* \"#utility.yul\":9029:9049   */\n      sub\n        /* \"#utility.yul\":9025:9026   */\n      0x00\n        /* \"#utility.yul\":9014:9023   */\n      dup4\n        /* \"#utility.yul\":9010:9027   */\n      add\n        /* \"#utility.yul\":9003:9050   */\n      mstore\n        /* \"#utility.yul\":9067:9198   */\n      tag_237\n        /* \"#utility.yul\":9193:9197   */\n      dup2\n        /* \"#utility.yul\":9067:9198   */\n      tag_194\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9059:9198   */\n      swap1\n      pop\n        /* \"#utility.yul\":8786:9205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9211:9433   */\n    tag_24:\n        /* \"#utility.yul\":9304:9308   */\n      0x00\n        /* \"#utility.yul\":9342:9344   */\n      0x20\n        /* \"#utility.yul\":9331:9340   */\n      dup3\n        /* \"#utility.yul\":9327:9345   */\n      add\n        /* \"#utility.yul\":9319:9345   */\n      swap1\n      pop\n        /* \"#utility.yul\":9355:9426   */\n      tag_239\n        /* \"#utility.yul\":9423:9424   */\n      0x00\n        /* \"#utility.yul\":9412:9421   */\n      dup4\n        /* \"#utility.yul\":9408:9425   */\n      add\n        /* \"#utility.yul\":9399:9405   */\n      dup5\n        /* \"#utility.yul\":9355:9426   */\n      tag_203\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9211:9433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9439:9653   */\n    tag_29:\n        /* \"#utility.yul\":9528:9532   */\n      0x00\n        /* \"#utility.yul\":9566:9568   */\n      0x20\n        /* \"#utility.yul\":9555:9564   */\n      dup3\n        /* \"#utility.yul\":9551:9569   */\n      add\n        /* \"#utility.yul\":9543:9569   */\n      swap1\n      pop\n        /* \"#utility.yul\":9579:9646   */\n      tag_241\n        /* \"#utility.yul\":9643:9644   */\n      0x00\n        /* \"#utility.yul\":9632:9641   */\n      dup4\n        /* \"#utility.yul\":9628:9645   */\n      add\n        /* \"#utility.yul\":9619:9625   */\n      dup5\n        /* \"#utility.yul\":9579:9646   */\n      tag_215\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9439:9653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9659:9788   */\n    tag_109:\n        /* \"#utility.yul\":9693:9699   */\n      0x00\n        /* \"#utility.yul\":9720:9740   */\n      tag_243\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9710:9740   */\n      swap1\n      pop\n        /* \"#utility.yul\":9749:9782   */\n      tag_245\n        /* \"#utility.yul\":9777:9781   */\n      dup3\n        /* \"#utility.yul\":9769:9775   */\n      dup3\n        /* \"#utility.yul\":9749:9782   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9659:9788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9794:9869   */\n    tag_244:\n        /* \"#utility.yul\":9827:9833   */\n      0x00\n        /* \"#utility.yul\":9860:9862   */\n      0x40\n        /* \"#utility.yul\":9854:9863   */\n      mload\n        /* \"#utility.yul\":9844:9863   */\n      swap1\n      pop\n        /* \"#utility.yul\":9794:9869   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9875:10186   */\n    tag_108:\n        /* \"#utility.yul\":9952:9956   */\n      0x00\n        /* \"#utility.yul\":10042:10060   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10034:10040   */\n      dup3\n        /* \"#utility.yul\":10031:10061   */\n      gt\n        /* \"#utility.yul\":10028:10084   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":10064:10082   */\n      tag_250\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10028:10084   */\n    tag_249:\n        /* \"#utility.yul\":10114:10118   */\n      0x20\n        /* \"#utility.yul\":10106:10112   */\n      dup3\n        /* \"#utility.yul\":10102:10119   */\n      mul\n        /* \"#utility.yul\":10094:10119   */\n      swap1\n      pop\n        /* \"#utility.yul\":10174:10178   */\n      0x20\n        /* \"#utility.yul\":10168:10172   */\n      dup2\n        /* \"#utility.yul\":10164:10179   */\n      add\n        /* \"#utility.yul\":10156:10179   */\n      swap1\n      pop\n        /* \"#utility.yul\":9875:10186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10192:10324   */\n    tag_172:\n        /* \"#utility.yul\":10259:10263   */\n      0x00\n        /* \"#utility.yul\":10282:10285   */\n      dup2\n        /* \"#utility.yul\":10274:10285   */\n      swap1\n      pop\n        /* \"#utility.yul\":10312:10316   */\n      0x20\n        /* \"#utility.yul\":10307:10310   */\n      dup3\n        /* \"#utility.yul\":10303:10317   */\n      add\n        /* \"#utility.yul\":10295:10317   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10330:10444   */\n    tag_168:\n        /* \"#utility.yul\":10397:10403   */\n      0x00\n        /* \"#utility.yul\":10431:10436   */\n      dup2\n        /* \"#utility.yul\":10425:10437   */\n      mload\n        /* \"#utility.yul\":10415:10437   */\n      swap1\n      pop\n        /* \"#utility.yul\":10330:10444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10450:10563   */\n    tag_178:\n        /* \"#utility.yul\":10520:10524   */\n      0x00\n        /* \"#utility.yul\":10552:10556   */\n      0x20\n        /* \"#utility.yul\":10547:10550   */\n      dup3\n        /* \"#utility.yul\":10543:10557   */\n      add\n        /* \"#utility.yul\":10535:10557   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10569:10753   */\n    tag_170:\n        /* \"#utility.yul\":10668:10679   */\n      0x00\n        /* \"#utility.yul\":10702:10708   */\n      dup3\n        /* \"#utility.yul\":10697:10700   */\n      dup3\n        /* \"#utility.yul\":10690:10709   */\n      mstore\n        /* \"#utility.yul\":10742:10746   */\n      0x20\n        /* \"#utility.yul\":10737:10740   */\n      dup3\n        /* \"#utility.yul\":10733:10747   */\n      add\n        /* \"#utility.yul\":10718:10747   */\n      swap1\n      pop\n        /* \"#utility.yul\":10569:10753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10759:10928   */\n    tag_186:\n        /* \"#utility.yul\":10843:10854   */\n      0x00\n        /* \"#utility.yul\":10877:10883   */\n      dup3\n        /* \"#utility.yul\":10872:10875   */\n      dup3\n        /* \"#utility.yul\":10865:10884   */\n      mstore\n        /* \"#utility.yul\":10917:10921   */\n      0x20\n        /* \"#utility.yul\":10912:10915   */\n      dup3\n        /* \"#utility.yul\":10908:10922   */\n      add\n        /* \"#utility.yul\":10893:10922   */\n      swap1\n      pop\n        /* \"#utility.yul\":10759:10928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11239   */\n    tag_102:\n        /* \"#utility.yul\":10974:10977   */\n      0x00\n        /* \"#utility.yul\":10993:11013   */\n      tag_258\n        /* \"#utility.yul\":11011:11012   */\n      dup3\n        /* \"#utility.yul\":10993:11013   */\n      tag_206\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10988:11013   */\n      swap2\n      pop\n        /* \"#utility.yul\":11027:11047   */\n      tag_259\n        /* \"#utility.yul\":11045:11046   */\n      dup4\n        /* \"#utility.yul\":11027:11047   */\n      tag_206\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":11022:11047   */\n      swap3\n      pop\n        /* \"#utility.yul\":11181:11182   */\n      dup3\n        /* \"#utility.yul\":11113:11179   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11109:11183   */\n      sub\n        /* \"#utility.yul\":11106:11107   */\n      dup3\n        /* \"#utility.yul\":11103:11184   */\n      gt\n        /* \"#utility.yul\":11100:11207   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":11187:11205   */\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":11100:11207   */\n    tag_260:\n        /* \"#utility.yul\":11231:11232   */\n      dup3\n        /* \"#utility.yul\":11228:11229   */\n      dup3\n        /* \"#utility.yul\":11224:11233   */\n      add\n        /* \"#utility.yul\":11217:11233   */\n      swap1\n      pop\n        /* \"#utility.yul\":10934:11239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11245:11436   */\n    tag_55:\n        /* \"#utility.yul\":11285:11289   */\n      0x00\n        /* \"#utility.yul\":11305:11325   */\n      tag_264\n        /* \"#utility.yul\":11323:11324   */\n      dup3\n        /* \"#utility.yul\":11305:11325   */\n      tag_206\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11300:11325   */\n      swap2\n      pop\n        /* \"#utility.yul\":11339:11359   */\n      tag_265\n        /* \"#utility.yul\":11357:11358   */\n      dup4\n        /* \"#utility.yul\":11339:11359   */\n      tag_206\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11334:11359   */\n      swap3\n      pop\n        /* \"#utility.yul\":11378:11379   */\n      dup3\n        /* \"#utility.yul\":11375:11376   */\n      dup3\n        /* \"#utility.yul\":11372:11380   */\n      lt\n        /* \"#utility.yul\":11369:11403   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":11383:11401   */\n      tag_267\n      tag_262\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":11369:11403   */\n    tag_266:\n        /* \"#utility.yul\":11428:11429   */\n      dup3\n        /* \"#utility.yul\":11425:11426   */\n      dup3\n        /* \"#utility.yul\":11421:11430   */\n      sub\n        /* \"#utility.yul\":11413:11430   */\n      swap1\n      pop\n        /* \"#utility.yul\":11245:11436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11442:11538   */\n    tag_161:\n        /* \"#utility.yul\":11479:11486   */\n      0x00\n        /* \"#utility.yul\":11508:11532   */\n      tag_269\n        /* \"#utility.yul\":11526:11531   */\n      dup3\n        /* \"#utility.yul\":11508:11532   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":11497:11532   */\n      swap1\n      pop\n        /* \"#utility.yul\":11442:11538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11544:11621   */\n    tag_182:\n        /* \"#utility.yul\":11581:11588   */\n      0x00\n        /* \"#utility.yul\":11610:11615   */\n      dup2\n        /* \"#utility.yul\":11599:11615   */\n      swap1\n      pop\n        /* \"#utility.yul\":11544:11621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11627:11716   */\n    tag_202:\n        /* \"#utility.yul\":11663:11670   */\n      0x00\n        /* \"#utility.yul\":11703:11709   */\n      0xffff\n        /* \"#utility.yul\":11696:11701   */\n      dup3\n        /* \"#utility.yul\":11692:11710   */\n      and\n        /* \"#utility.yul\":11681:11710   */\n      swap1\n      pop\n        /* \"#utility.yul\":11627:11716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11722:11848   */\n    tag_270:\n        /* \"#utility.yul\":11759:11766   */\n      0x00\n        /* \"#utility.yul\":11799:11841   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11792:11797   */\n      dup3\n        /* \"#utility.yul\":11788:11842   */\n      and\n        /* \"#utility.yul\":11777:11842   */\n      swap1\n      pop\n        /* \"#utility.yul\":11722:11848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11854:11931   */\n    tag_206:\n        /* \"#utility.yul\":11891:11898   */\n      0x00\n        /* \"#utility.yul\":11920:11925   */\n      dup2\n        /* \"#utility.yul\":11909:11925   */\n      swap1\n      pop\n        /* \"#utility.yul\":11854:11931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11937:12030   */\n    tag_210:\n        /* \"#utility.yul\":11973:11980   */\n      0x00\n        /* \"#utility.yul\":12013:12023   */\n      0xffffffff\n        /* \"#utility.yul\":12006:12011   */\n      dup3\n        /* \"#utility.yul\":12002:12024   */\n      and\n        /* \"#utility.yul\":11991:12024   */\n      swap1\n      pop\n        /* \"#utility.yul\":11937:12030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12036:12137   */\n    tag_214:\n        /* \"#utility.yul\":12072:12079   */\n      0x00\n        /* \"#utility.yul\":12112:12130   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12105:12110   */\n      dup3\n        /* \"#utility.yul\":12101:12131   */\n      and\n        /* \"#utility.yul\":12090:12131   */\n      swap1\n      pop\n        /* \"#utility.yul\":12036:12137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12143:12229   */\n    tag_218:\n        /* \"#utility.yul\":12178:12185   */\n      0x00\n        /* \"#utility.yul\":12218:12222   */\n      0xff\n        /* \"#utility.yul\":12211:12216   */\n      dup3\n        /* \"#utility.yul\":12207:12223   */\n      and\n        /* \"#utility.yul\":12196:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":12143:12229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12235:12516   */\n    tag_246:\n        /* \"#utility.yul\":12318:12345   */\n      tag_279\n        /* \"#utility.yul\":12340:12344   */\n      dup3\n        /* \"#utility.yul\":12318:12345   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":12310:12316   */\n      dup2\n        /* \"#utility.yul\":12306:12346   */\n      add\n        /* \"#utility.yul\":12448:12454   */\n      dup2\n        /* \"#utility.yul\":12436:12446   */\n      dup2\n        /* \"#utility.yul\":12433:12455   */\n      lt\n        /* \"#utility.yul\":12412:12430   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12400:12410   */\n      dup3\n        /* \"#utility.yul\":12397:12431   */\n      gt\n        /* \"#utility.yul\":12394:12456   */\n      or\n        /* \"#utility.yul\":12391:12479   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":12459:12477   */\n      tag_282\n      tag_251\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":12391:12479   */\n    tag_281:\n        /* \"#utility.yul\":12499:12509   */\n      dup1\n        /* \"#utility.yul\":12495:12497   */\n      0x40\n        /* \"#utility.yul\":12488:12510   */\n      mstore\n        /* \"#utility.yul\":12278:12516   */\n      pop\n        /* \"#utility.yul\":12235:12516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12522:12755   */\n    tag_95:\n        /* \"#utility.yul\":12561:12564   */\n      0x00\n        /* \"#utility.yul\":12584:12608   */\n      tag_284\n        /* \"#utility.yul\":12602:12607   */\n      dup3\n        /* \"#utility.yul\":12584:12608   */\n      tag_206\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":12575:12608   */\n      swap2\n      pop\n        /* \"#utility.yul\":12630:12696   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12623:12628   */\n      dup3\n        /* \"#utility.yul\":12620:12697   */\n      eq\n        /* \"#utility.yul\":12617:12720   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":12700:12718   */\n      tag_286\n      tag_262\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12617:12720   */\n    tag_285:\n        /* \"#utility.yul\":12747:12748   */\n      0x01\n        /* \"#utility.yul\":12740:12745   */\n      dup3\n        /* \"#utility.yul\":12736:12749   */\n      add\n        /* \"#utility.yul\":12729:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12522:12755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:12937   */\n    tag_100:\n        /* \"#utility.yul\":12793:12794   */\n      0x00\n        /* \"#utility.yul\":12810:12830   */\n      tag_288\n        /* \"#utility.yul\":12828:12829   */\n      dup3\n        /* \"#utility.yul\":12810:12830   */\n      tag_206\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12805:12830   */\n      swap2\n      pop\n        /* \"#utility.yul\":12844:12864   */\n      tag_289\n        /* \"#utility.yul\":12862:12863   */\n      dup4\n        /* \"#utility.yul\":12844:12864   */\n      tag_206\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":12839:12864   */\n      swap3\n      pop\n        /* \"#utility.yul\":12883:12884   */\n      dup3\n        /* \"#utility.yul\":12873:12908   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":12888:12906   */\n      tag_291\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12873:12908   */\n    tag_290:\n        /* \"#utility.yul\":12929:12930   */\n      dup3\n        /* \"#utility.yul\":12926:12927   */\n      dup3\n        /* \"#utility.yul\":12922:12931   */\n      mod\n        /* \"#utility.yul\":12917:12931   */\n      swap1\n      pop\n        /* \"#utility.yul\":12761:12937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12943:13123   */\n    tag_262:\n        /* \"#utility.yul\":12991:13068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12988:12989   */\n      0x00\n        /* \"#utility.yul\":12981:13069   */\n      mstore\n        /* \"#utility.yul\":13088:13092   */\n      0x11\n        /* \"#utility.yul\":13085:13086   */\n      0x04\n        /* \"#utility.yul\":13078:13093   */\n      mstore\n        /* \"#utility.yul\":13112:13116   */\n      0x24\n        /* \"#utility.yul\":13109:13110   */\n      0x00\n        /* \"#utility.yul\":13102:13117   */\n      revert\n        /* \"#utility.yul\":13129:13309   */\n    tag_292:\n        /* \"#utility.yul\":13177:13254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13174:13175   */\n      0x00\n        /* \"#utility.yul\":13167:13255   */\n      mstore\n        /* \"#utility.yul\":13274:13278   */\n      0x12\n        /* \"#utility.yul\":13271:13272   */\n      0x04\n        /* \"#utility.yul\":13264:13279   */\n      mstore\n        /* \"#utility.yul\":13298:13302   */\n      0x24\n        /* \"#utility.yul\":13295:13296   */\n      0x00\n        /* \"#utility.yul\":13288:13303   */\n      revert\n        /* \"#utility.yul\":13315:13495   */\n    tag_58:\n        /* \"#utility.yul\":13363:13440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13360:13361   */\n      0x00\n        /* \"#utility.yul\":13353:13441   */\n      mstore\n        /* \"#utility.yul\":13460:13464   */\n      0x32\n        /* \"#utility.yul\":13457:13458   */\n      0x04\n        /* \"#utility.yul\":13450:13465   */\n      mstore\n        /* \"#utility.yul\":13484:13488   */\n      0x24\n        /* \"#utility.yul\":13481:13482   */\n      0x00\n        /* \"#utility.yul\":13474:13489   */\n      revert\n        /* \"#utility.yul\":13501:13681   */\n    tag_251:\n        /* \"#utility.yul\":13549:13626   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13539:13627   */\n      mstore\n        /* \"#utility.yul\":13646:13650   */\n      0x41\n        /* \"#utility.yul\":13643:13644   */\n      0x04\n        /* \"#utility.yul\":13636:13651   */\n      mstore\n        /* \"#utility.yul\":13670:13674   */\n      0x24\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13660:13675   */\n      revert\n        /* \"#utility.yul\":13687:13804   */\n    tag_126:\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13793:13794   */\n      dup1\n        /* \"#utility.yul\":13786:13798   */\n      revert\n        /* \"#utility.yul\":13810:13927   */\n    tag_112:\n        /* \"#utility.yul\":13919:13920   */\n      0x00\n        /* \"#utility.yul\":13916:13917   */\n      dup1\n        /* \"#utility.yul\":13909:13921   */\n      revert\n        /* \"#utility.yul\":13933:14050   */\n    tag_153:\n        /* \"#utility.yul\":14042:14043   */\n      0x00\n        /* \"#utility.yul\":14039:14040   */\n      dup1\n        /* \"#utility.yul\":14032:14044   */\n      revert\n        /* \"#utility.yul\":14056:14173   */\n    tag_137:\n        /* \"#utility.yul\":14165:14166   */\n      0x00\n        /* \"#utility.yul\":14162:14163   */\n      dup1\n        /* \"#utility.yul\":14155:14167   */\n      revert\n        /* \"#utility.yul\":14179:14281   */\n    tag_280:\n        /* \"#utility.yul\":14220:14226   */\n      0x00\n        /* \"#utility.yul\":14271:14273   */\n      0x1f\n        /* \"#utility.yul\":14267:14274   */\n      not\n        /* \"#utility.yul\":14262:14264   */\n      0x1f\n        /* \"#utility.yul\":14255:14260   */\n      dup4\n        /* \"#utility.yul\":14251:14265   */\n      add\n        /* \"#utility.yul\":14247:14275   */\n      and\n        /* \"#utility.yul\":14237:14275   */\n      swap1\n      pop\n        /* \"#utility.yul\":14179:14281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14287:14453   */\n    tag_188:\n        /* \"#utility.yul\":14427:14445   */\n      0x526f6c6c20696e2070726f677265737300000000000000000000000000000000\n        /* \"#utility.yul\":14423:14424   */\n      0x00\n        /* \"#utility.yul\":14415:14421   */\n      dup3\n        /* \"#utility.yul\":14411:14425   */\n      add\n        /* \"#utility.yul\":14404:14446   */\n      mstore\n        /* \"#utility.yul\":14287:14453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14459:14624   */\n    tag_193:\n        /* \"#utility.yul\":14599:14616   */\n      0x44696365206e6f7420726f6c6c65640000000000000000000000000000000000\n        /* \"#utility.yul\":14595:14596   */\n      0x00\n        /* \"#utility.yul\":14587:14593   */\n      dup3\n        /* \"#utility.yul\":14583:14597   */\n      add\n        /* \"#utility.yul\":14576:14617   */\n      mstore\n        /* \"#utility.yul\":14459:14624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14630:14794   */\n    tag_198:\n        /* \"#utility.yul\":14770:14786   */\n      0x416c726561647920726f6c6c6564000000000000000000000000000000000000\n        /* \"#utility.yul\":14766:14767   */\n      0x00\n        /* \"#utility.yul\":14758:14764   */\n      dup3\n        /* \"#utility.yul\":14754:14768   */\n      add\n        /* \"#utility.yul\":14747:14787   */\n      mstore\n        /* \"#utility.yul\":14630:14794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14800:14922   */\n    tag_121:\n        /* \"#utility.yul\":14873:14897   */\n      tag_306\n        /* \"#utility.yul\":14891:14896   */\n      dup2\n        /* \"#utility.yul\":14873:14897   */\n      tag_161\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14866:14871   */\n      dup2\n        /* \"#utility.yul\":14863:14898   */\n      eq\n        /* \"#utility.yul\":14853:14916   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":14912:14913   */\n      0x00\n        /* \"#utility.yul\":14909:14910   */\n      dup1\n        /* \"#utility.yul\":14902:14914   */\n      revert\n        /* \"#utility.yul\":14853:14916   */\n    tag_307:\n        /* \"#utility.yul\":14800:14922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14928:15050   */\n    tag_130:\n        /* \"#utility.yul\":15001:15025   */\n      tag_309\n        /* \"#utility.yul\":15019:15024   */\n      dup2\n        /* \"#utility.yul\":15001:15025   */\n      tag_206\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":14994:14999   */\n      dup2\n        /* \"#utility.yul\":14991:15026   */\n      eq\n        /* \"#utility.yul\":14981:15044   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":15040:15041   */\n      0x00\n        /* \"#utility.yul\":15037:15038   */\n      dup1\n        /* \"#utility.yul\":15030:15042   */\n      revert\n        /* \"#utility.yul\":14981:15044   */\n    tag_310:\n        /* \"#utility.yul\":14928:15050   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208b349647dee6a6b0907b4c01b473126474ad87d72864a82ef5f5c06b29f7a57064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_328": {
									"entryPoint": null,
									"id": 328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64_fromMemory": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1066:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "79:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "136:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "110:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "110:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "47:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "55:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "63:5:3",
														"type": ""
													}
												],
												"src": "7:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "230:273:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "276:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "278:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "278:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "278:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "251:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "260:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "247:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "247:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "272:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "243:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "243:32:3"
															},
															"nodeType": "YulIf",
															"src": "240:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "369:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "384:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "388:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "413:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "478:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "423:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "413:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "200:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "211:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "223:6:3",
														"type": ""
													}
												],
												"src": "154:349:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "549:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "559:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "575:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "569:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "559:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "542:6:3",
														"type": ""
													}
												],
												"src": "509:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "634:57:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "644:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "666:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "655:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:30:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "644:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "616:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "626:7:3",
														"type": ""
													}
												],
												"src": "590:101:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "786:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "803:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "697:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "820:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "985:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1041:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1053:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1043:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1043:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1043:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1008:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1032:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "1015:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1015:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1005:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:42:3"
															},
															"nodeType": "YulIf",
															"src": "995:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "978:5:3",
														"type": ""
													}
												],
												"src": "943:120:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052732ca8e0c643bde4c2e08ab1fa0da3401adad7734d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c1560001b600255619c40600360006101000a81548163ffffffff021916908363ffffffff16021790555060038060046101000a81548161ffff021916908361ffff1602179055506001600360066101000a81548163ffffffff021916908363ffffffff160217905550348015620000ef57600080fd5b50604051620015b2380380620015b283398181016040528101906200011591906200025a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336003600a6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050620002bf565b6000815190506200025481620002a5565b92915050565b600060208284031215620002735762000272620002a0565b5b6000620002838482850162000243565b91505092915050565b600067ffffffffffffffff82169050919050565b600080fd5b620002b0816200028c565b8114620002bc57600080fd5b50565b60805160601c6112cd620002e5600039600081816101ed015261024101526112cd6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634aa66b281161005b5780634aa66b28146100ec578063646f2a161461011c578063cfb096511461014c578063e8ace5d71461017c5761007d565b806315c6aee2146100825780631fe543e3146100b2578063302bcc57146100ce575b600080fd5b61009c60048036038101906100979190610b5c565b6101ac565b6040516100a99190610d69565b60405180910390f35b6100cc60048036038101906100c79190610bb6565b6101eb565b005b6100d66102ab565b6040516100e39190610e82565b60405180910390f35b61010660048036038101906101019190610b5c565b6102b8565b6040516101139190610e9d565b60405180910390f35b61013660048036038101906101319190610b2f565b6103bb565b6040516101439190610e9d565b60405180910390f35b61016660048036038101906101619190610b2f565b610511565b6040516101739190610dad565b60405180910390f35b61019660048036038101906101919190610b2f565b610604565b6040516101a39190610e82565b60405180910390f35b600481815481106101bc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029d57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610294929190610d84565b60405180910390fd5b6102a78282610970565b5050565b6000600480549050905090565b600080604051806102800160405280600160ff168152602001600260ff168152602001600360ff168152602001600460ff168152602001600560ff168152602001600660ff168152602001600760ff168152602001600860ff168152602001600960ff168152602001600a60ff168152602001600b60ff168152602001600c60ff168152602001600d60ff168152602001600e60ff168152602001600f60ff168152602001601060ff168152602001601160ff168152602001601260ff168152602001601360ff168152602001601460ff1681525090508060018461039d9190610fa9565b601481106103ae576103ad61116b565b5b6020020151915050919050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690610e42565b60405180910390fd5b602a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610e22565b60405180910390fd5b61050a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102b8565b9050919050565b60606004829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048054806020026020016040519081016040528092919081815260200182805480156105f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ae575b50505050509050919050565b60006003600a9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066057600080fd5b600061066a6102ab565b905060005b81811015610969578373ffffffffffffffffffffffffffffffffffffffff16600482815481106106a2576106a161116b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ee57610969565b6106f784610511565b506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190610e62565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600254600060149054906101000a900467ffffffffffffffff16600360049054906101000a900461ffff16600360009054906101000a900463ffffffff16600360069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610827959493929190610dcf565b602060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610b89565b9250836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602a600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16837f3e7fdeab84c01ce5308321caa0b460e1c4ec3c7099223d79634d9a71d99932e360405160405180910390a3808061096190611093565b91505061066f565b5050919050565b6000600160148360008151811061098a5761098961116b565b5b602002602001015161099c91906110dc565b6109a69190610f53565b905080600660006005600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080837f54d97c1f7e5abad75bd421455cd4dd296852a52e1ea721f2cdb66d06fa2082a960405160405180910390a3505050565b6000610a65610a6084610edd565b610eb8565b90508083825260208201905082856020860282011115610a8857610a876111ce565b5b60005b85811015610ab85781610a9e8882610b05565b845260208401935060208301925050600181019050610a8b565b5050509392505050565b600081359050610ad181611269565b92915050565b600082601f830112610aec57610aeb6111c9565b5b8135610afc848260208601610a52565b91505092915050565b600081359050610b1481611280565b92915050565b600081519050610b2981611280565b92915050565b600060208284031215610b4557610b446111d8565b5b6000610b5384828501610ac2565b91505092915050565b600060208284031215610b7257610b716111d8565b5b6000610b8084828501610b05565b91505092915050565b600060208284031215610b9f57610b9e6111d8565b5b6000610bad84828501610b1a565b91505092915050565b60008060408385031215610bcd57610bcc6111d8565b5b6000610bdb85828601610b05565b925050602083013567ffffffffffffffff811115610bfc57610bfb6111d3565b5b610c0885828601610ad7565b9150509250929050565b6000610c1e8383610c2a565b60208301905092915050565b610c3381610fdd565b82525050565b610c4281610fdd565b82525050565b6000610c5382610f19565b610c5d8185610f31565b9350610c6883610f09565b8060005b83811015610c99578151610c808882610c12565b9750610c8b83610f24565b925050600181019050610c6c565b5085935050505092915050565b610caf81610fef565b82525050565b6000610cc2601083610f42565b9150610ccd826111ee565b602082019050919050565b6000610ce5600f83610f42565b9150610cf082611217565b602082019050919050565b6000610d08600e83610f42565b9150610d1382611240565b602082019050919050565b610d2781610ff9565b82525050565b610d3681611027565b82525050565b610d4581611031565b82525050565b610d5481611041565b82525050565b610d6381611055565b82525050565b6000602082019050610d7e6000830184610c39565b92915050565b6000604082019050610d996000830185610c39565b610da66020830184610c39565b9392505050565b60006020820190508181036000830152610dc78184610c48565b905092915050565b600060a082019050610de46000830188610ca6565b610df16020830187610d4b565b610dfe6040830186610d1e565b610e0b6060830185610d3c565b610e186080830184610d3c565b9695505050505050565b60006020820190508181036000830152610e3b81610cb5565b9050919050565b60006020820190508181036000830152610e5b81610cd8565b9050919050565b60006020820190508181036000830152610e7b81610cfb565b9050919050565b6000602082019050610e976000830184610d2d565b92915050565b6000602082019050610eb26000830184610d5a565b92915050565b6000610ec2610ed3565b9050610ece8282611062565b919050565b6000604051905090565b600067ffffffffffffffff821115610ef857610ef761119a565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f5e82611027565b9150610f6983611027565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f9e57610f9d61110d565b5b828201905092915050565b6000610fb482611027565b9150610fbf83611027565b925082821015610fd257610fd161110d565b5b828203905092915050565b6000610fe882611007565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b61106b826111dd565b810181811067ffffffffffffffff8211171561108a5761108961119a565b5b80604052505050565b600061109e82611027565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110d1576110d061110d565b5b600182019050919050565b60006110e782611027565b91506110f283611027565b9250826111025761110161113c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f526f6c6c20696e2070726f677265737300000000000000000000000000000000600082015250565b7f44696365206e6f7420726f6c6c65640000000000000000000000000000000000600082015250565b7f416c726561647920726f6c6c6564000000000000000000000000000000000000600082015250565b61127281610fdd565b811461127d57600080fd5b50565b61128981611027565b811461129457600080fd5b5056fea26469706673582212208b349647dee6a6b0907b4c01b473126474ad87d72864a82ef5f5c06b29f7a57064736f6c63430008070033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0x2CA8E0C643BDE4C2E08AB1FA0DA3401ADAD7734D PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x79D3D8832D904592C0BF9818B621522C988BB8B0C05CDC3B15AEA1B6E8DB0C15 PUSH1 0x0 SHL PUSH1 0x2 SSTORE PUSH2 0x9C40 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15B2 CODESIZE SUB DUP1 PUSH3 0x15B2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x25A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2BF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x254 DUP2 PUSH3 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x273 JUMPI PUSH3 0x272 PUSH3 0x2A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x283 DUP5 DUP3 DUP6 ADD PUSH3 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2B0 DUP2 PUSH3 0x28C JUMP JUMPDEST DUP2 EQ PUSH3 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x12CD PUSH3 0x2E5 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1ED ADD MSTORE PUSH2 0x241 ADD MSTORE PUSH2 0x12CD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA66B28 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4AA66B28 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x646F2A16 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xCFB09651 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE8ACE5D7 EQ PUSH2 0x17C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x15C6AEE2 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x302BCC57 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29D JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP3 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A7 DUP3 DUP3 PUSH2 0x970 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x13 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x14 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 DUP5 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2A PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5AE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66A PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x116B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6EE JUMPI PUSH2 0x969 JUMP JUMPDEST PUSH2 0x6F7 DUP5 PUSH2 0x511 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x771 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0x2 SLOAD PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2A PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3E7FDEAB84C01CE5308321CAA0B460E1C4EC3C7099223D79634D9A71D99932E3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x66F JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH32 0x54D97C1F7E5ABAD75BD421455CD4DD296852A52E1EA721F2CDB66D06FA2082A9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA60 DUP5 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP2 PUSH2 0xA9E DUP9 DUP3 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA8B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD1 DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB14 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB53 DUP5 DUP3 DUP6 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAD DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDB DUP6 DUP3 DUP7 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0x11D3 JUMP JUMPDEST JUMPDEST PUSH2 0xC08 DUP6 DUP3 DUP7 ADD PUSH2 0xAD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP4 DUP4 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC53 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xC5D DUP2 DUP6 PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP PUSH2 0xC68 DUP4 PUSH2 0xF09 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC99 JUMPI DUP2 MLOAD PUSH2 0xC80 DUP9 DUP3 PUSH2 0xC12 JUMP JUMPDEST SWAP8 POP PUSH2 0xC8B DUP4 PUSH2 0xF24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAF DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC2 PUSH1 0x10 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0xF DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH1 0xE DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xD13 DUP3 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD36 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH2 0x1031 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0x1055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xDA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC7 DUP2 DUP5 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xDE4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xDF1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xDFE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xE0B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xE18 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD3C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3B DUP2 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5B DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE97 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH2 0xECE DUP3 DUP3 PUSH2 0x1062 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x119A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0xF69 DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBF DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP3 PUSH2 0x11DD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109E DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x10D1 JUMPI PUSH2 0x10D0 PUSH2 0x110D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F2 DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x113C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F6C6C20696E2070726F677265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44696365206E6F7420726F6C6C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920726F6C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1272 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP2 EQ PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP2 EQ PUSH2 0x1294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 CALLVALUE SWAP7 SELFBALANCE 0xDE 0xE6 0xA6 0xB0 SWAP1 PUSH28 0x4C01B473126474AD87D72864A82EF5F5C06B29F7A57064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "577:6595:0:-:0;;;1047:42;1022:67;;;;;;;;;;;;;;;;;;;;1317:66;1297:86;;;;1676:5;1650:31;;;;;;;;;;;;;;;;;;;;1773:1;1743:31;;;;;;;;;;;;;;;;;;;;1919:1;1901:19;;;;;;;;;;;;;;;;;;;;2966:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3019:14;;;;;;;;;;;5616:15:1;5599:32;;;;;;;;;;;;5556:80;3086:14:0::1;;;;;;;;;;;3046:11;::::0;:55:::1;;;;;;;;;;;;;;;;;;3122:10;3112:7;;:20;;;;;;;;;;;;;;;;;;3162:14;3143:16;;:33;;;;;;;;;;;;;;;;;;2966:218:::0;577:6595;;7:141:3;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;7:141;;;;:::o;154:349::-;223:6;272:2;260:9;251:7;247:23;243:32;240:119;;;278:79;;:::i;:::-;240:119;398:1;423:63;478:7;469:6;458:9;454:22;423:63;:::i;:::-;413:73;;369:127;154:349;;;;:::o;590:101::-;626:7;666:18;659:5;655:30;644:41;;590:101;;;:::o;820:117::-;929:1;926;919:12;943:120;1015:23;1032:5;1015:23;:::i;:::-;1008:5;1005:34;995:62;;1053:1;1050;1043:12;995:62;943:120;:::o;577:6595:0:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@collectBonus_251": {
									"entryPoint": 955,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createPlayer_183": {
									"entryPoint": 1540,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fulfillRandomWords_218": {
									"entryPoint": 2416,
									"id": 218,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBonus_294": {
									"entryPoint": 696,
									"id": 294,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@playerAddresses_34": {
									"entryPoint": 428,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@playerCount_60": {
									"entryPoint": 683,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rawFulfillRandomWords_363": {
									"entryPoint": 491,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@storePlayer_51": {
									"entryPoint": 1297,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9": {
									"entryPoint": 4631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15053:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:3",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:3"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:3",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:3"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:3"
															},
															"nodeType": "YulIf",
															"src": "350:143:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:3",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:3"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:3"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:3"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:3",
														"type": ""
													}
												],
												"src": "24:722:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "836:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "823:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "814:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "879:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "852:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "782:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "790:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "798:5:3",
														"type": ""
													}
												],
												"src": "752:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:293:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1042:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1027:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1015:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1015:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1034:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:35:3"
															},
															"nodeType": "YulIf",
															"src": "1001:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1146:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1136:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1175:103:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1259:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1274:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1184:62:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:94:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1175:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "969:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "977:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "985:5:3",
														"type": ""
													}
												],
												"src": "914:370:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1352:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1374:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1361:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1417:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1390:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1390:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1320:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1328:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1336:5:3",
														"type": ""
													}
												],
												"src": "1290:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1498:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1508:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1517:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1508:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1566:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1539:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1476:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1484:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1492:5:3",
														"type": ""
													}
												],
												"src": "1435:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1696:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1698:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1671:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1680:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1667:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:32:3"
															},
															"nodeType": "YulIf",
															"src": "1660:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1789:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1804:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1808:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1833:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1868:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1879:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1864:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1864:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1888:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1843:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1833:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1620:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1631:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1643:6:3",
														"type": ""
													}
												],
												"src": "1584:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1985:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2031:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2033:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2033:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2033:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2006:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2015:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:32:3"
															},
															"nodeType": "YulIf",
															"src": "1995:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2124:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2139:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2153:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2143:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2168:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2203:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2214:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2199:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2199:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2223:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2178:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2168:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1955:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1966:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1978:6:3",
														"type": ""
													}
												],
												"src": "1919:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2331:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2377:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2379:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2379:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2361:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2348:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:32:3"
															},
															"nodeType": "YulIf",
															"src": "2341:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2470:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2514:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2560:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2571:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2556:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2556:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2580:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2524:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2514:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2301:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2312:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2324:6:3",
														"type": ""
													}
												],
												"src": "2254:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2719:576:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2765:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2767:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2767:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2767:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2740:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2749:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2736:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2761:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:32:3"
															},
															"nodeType": "YulIf",
															"src": "2729:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2858:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2873:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2877:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2902:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2937:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2948:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2933:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2933:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2957:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2912:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2912:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2902:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2985:303:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3000:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3031:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3042:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3027:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3014:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3004:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3093:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3095:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3095:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3095:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3065:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3062:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3059:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3190:88:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3250:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3261:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3246:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3270:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3200:45:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:78:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3190:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2681:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2692:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2704:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2712:6:3",
														"type": ""
													}
												],
												"src": "2611:684:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3381:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3425:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3433:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3391:33:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3391:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3446:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3464:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3460:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3446:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3362:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3370:10:3",
														"type": ""
													}
												],
												"src": "3301:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3541:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3558:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3581:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3563:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3563:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3551:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3551:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3529:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3536:3:3",
														"type": ""
													}
												],
												"src": "3486:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3665:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3682:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3705:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3687:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3653:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3660:3:3",
														"type": ""
													}
												],
												"src": "3600:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:608:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3950:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3902:47:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:54:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3892:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3965:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4046:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4051:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3972:73:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:86:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4132:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4082:49:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:56:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4071:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4147:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4161:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:224:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4251:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4278:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4272:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4272:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4255:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4298:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4349:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4364:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4305:43:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4305:63:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4298:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4381:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4444:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4391:52:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4391:60:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4381:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4199:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4202:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4196:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4210:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4212:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4221:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4224:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4217:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4217:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4212:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4181:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4183:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4192:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4187:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4177:284:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4477:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3857:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3864:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3873:3:3",
														"type": ""
													}
												],
												"src": "3754:732:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4557:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4574:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4597:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4579:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4567:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4545:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4552:3:3",
														"type": ""
													}
												],
												"src": "4492:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4762:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4772:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4779:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4772:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228",
																	"nodeType": "YulIdentifier",
																	"src": "4855:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4855:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4957:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4968:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4964:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4964:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4750:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4758:3:3",
														"type": ""
													}
												],
												"src": "4616:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5134:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5144:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5210:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5151:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5316:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9",
																	"nodeType": "YulIdentifier",
																	"src": "5227:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5227:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5329:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5340:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5336:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5122:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5130:3:3",
														"type": ""
													}
												],
												"src": "4988:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5506:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5516:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5582:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5587:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5523:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5688:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde",
																	"nodeType": "YulIdentifier",
																	"src": "5599:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5701:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5712:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5701:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5494:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5502:3:3",
														"type": ""
													}
												],
												"src": "5360:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5795:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5812:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5834:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "5817:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5783:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5790:3:3",
														"type": ""
													}
												],
												"src": "5732:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5918:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5935:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5958:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5940:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5940:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5906:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5913:3:3",
														"type": ""
													}
												],
												"src": "5853:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6040:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6057:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6079:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "6062:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6062:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6050:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6028:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6035:3:3",
														"type": ""
													}
												],
												"src": "5977:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6161:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6178:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6200:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "6183:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6183:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6149:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6156:3:3",
														"type": ""
													}
												],
												"src": "6098:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6280:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6297:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6318:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6302:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6290:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6290:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6268:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6275:3:3",
														"type": ""
													}
												],
												"src": "6219:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6435:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6445:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6457:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6445:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6525:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6538:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6549:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6534:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6481:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6407:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6419:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6430:4:3",
														"type": ""
													}
												],
												"src": "6337:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6691:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6701:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6713:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6724:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6701:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6781:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6794:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6805:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6790:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6790:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6737:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6737:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6875:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6886:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6871:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6818:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6818:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6818:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6655:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6667:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6675:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6686:4:3",
														"type": ""
													}
												],
												"src": "6565:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7051:225:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7061:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7073:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7084:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7061:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7108:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7119:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7104:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7127:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7133:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7123:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7097:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7153:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7255:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7264:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7161:93:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7023:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7035:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7046:4:3",
														"type": ""
													}
												],
												"src": "6903:373:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7484:446:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7494:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7506:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7517:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7575:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7588:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7599:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7584:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7531:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7531:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7654:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7667:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7678:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7612:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7612:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7612:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7734:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7692:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7772:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7894:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7852:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7852:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7852:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7424:9:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7436:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7444:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7452:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7460:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7468:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7479:4:3",
														"type": ""
													}
												],
												"src": "7282:648:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8107:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8117:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8129:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8140:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8117:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8164:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8175:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8160:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8160:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8183:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8189:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8179:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8179:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8153:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8153:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8153:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8209:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8343:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8217:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8209:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8087:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8102:4:3",
														"type": ""
													}
												],
												"src": "7936:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8532:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8542:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8554:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8565:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8542:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8589:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8600:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8585:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8585:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8608:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8614:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8604:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8578:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8634:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8768:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8642:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8634:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8512:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8527:4:3",
														"type": ""
													}
												],
												"src": "8361:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8957:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8967:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8979:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8990:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8975:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8967:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9014:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9025:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9010:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9033:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9039:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9029:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9029:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9003:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9003:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9003:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9059:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9193:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9067:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9059:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8937:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8952:4:3",
														"type": ""
													}
												],
												"src": "8786:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9309:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9319:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9331:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9327:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9319:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9399:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9412:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9423:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9408:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9408:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9355:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9281:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9293:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9304:4:3",
														"type": ""
													}
												],
												"src": "9211:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9533:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9543:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9555:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9566:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9551:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9551:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9543:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9619:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9632:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9643:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9628:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9628:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9579:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9579:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9505:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9517:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9528:4:3",
														"type": ""
													}
												],
												"src": "9439:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9700:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9710:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9720:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9769:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9777:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9749:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9684:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9693:6:3",
														"type": ""
													}
												],
												"src": "9659:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9834:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9844:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9860:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9854:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9854:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9827:6:3",
														"type": ""
													}
												],
												"src": "9794:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9957:229:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10062:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10064:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10064:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10064:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10034:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10042:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10031:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:30:3"
															},
															"nodeType": "YulIf",
															"src": "10028:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10094:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10106:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10114:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10102:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10102:17:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10094:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10156:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10168:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10174:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10164:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10156:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9941:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9952:4:3",
														"type": ""
													}
												],
												"src": "9875:311:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10264:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10274:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "10282:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10274:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10295:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10307:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10312:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10295:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10251:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10259:4:3",
														"type": ""
													}
												],
												"src": "10192:132:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10404:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10415:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10431:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10425:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10425:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10415:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10387:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10397:6:3",
														"type": ""
													}
												],
												"src": "10330:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10525:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10535:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10547:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10552:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10543:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10543:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "10535:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10512:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "10520:4:3",
														"type": ""
													}
												],
												"src": "10450:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10680:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10697:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10702:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10718:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10737:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10742:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10733:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10733:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10718:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10652:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10657:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10668:11:3",
														"type": ""
													}
												],
												"src": "10569:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10855:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10872:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10877:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10865:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10865:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10893:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10912:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10917:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10893:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10827:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10832:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10843:11:3",
														"type": ""
													}
												],
												"src": "10759:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10978:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10988:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11011:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10993:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10993:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10988:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11022:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11045:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11027:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11027:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11022:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11185:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11187:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11187:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11187:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11106:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11113:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11181:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11109:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11103:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:81:3"
															},
															"nodeType": "YulIf",
															"src": "11100:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11217:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11228:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11231:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11224:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11217:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10965:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10968:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10974:3:3",
														"type": ""
													}
												],
												"src": "10934:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11300:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11323:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11305:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11300:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11334:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11357:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11339:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11334:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11381:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11383:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11383:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11383:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11375:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11378:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11372:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:8:3"
															},
															"nodeType": "YulIf",
															"src": "11369:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11413:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11425:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11428:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11413:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11276:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11279:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11285:4:3",
														"type": ""
													}
												],
												"src": "11245:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11487:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11497:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11526:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11508:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11497:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11469:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11479:7:3",
														"type": ""
													}
												],
												"src": "11442:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11589:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11599:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11610:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11599:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11571:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11581:7:3",
														"type": ""
													}
												],
												"src": "11544:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11671:45:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11681:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11696:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11703:6:3",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:18:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11681:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11653:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11663:7:3",
														"type": ""
													}
												],
												"src": "11627:89:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11777:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11792:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11799:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11788:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11788:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11777:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11749:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11759:7:3",
														"type": ""
													}
												],
												"src": "11722:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11899:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11909:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11920:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11909:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11881:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11891:7:3",
														"type": ""
													}
												],
												"src": "11854:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11981:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11991:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12006:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12013:10:3",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12002:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12002:22:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11991:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11963:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11973:7:3",
														"type": ""
													}
												],
												"src": "11937:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12080:57:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12090:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12105:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:30:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12090:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12062:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12072:7:3",
														"type": ""
													}
												],
												"src": "12036:101:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12186:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12196:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12211:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12218:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12207:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12196:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12168:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12178:7:3",
														"type": ""
													}
												],
												"src": "12143:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12278:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12288:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12310:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12340:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12318:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12318:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12306:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12292:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12457:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12459:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12459:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12459:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12400:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12412:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12397:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12397:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12436:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12448:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12433:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12433:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12394:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12394:62:3"
															},
															"nodeType": "YulIf",
															"src": "12391:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12495:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12499:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12488:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12488:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12488:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12264:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12272:4:3",
														"type": ""
													}
												],
												"src": "12235:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12565:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12575:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12602:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12584:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12584:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12575:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12698:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12700:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12700:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12700:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12623:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12630:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12620:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12620:77:3"
															},
															"nodeType": "YulIf",
															"src": "12617:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12729:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12740:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12747:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12736:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12736:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12551:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12561:3:3",
														"type": ""
													}
												],
												"src": "12522:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12795:142:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12805:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12828:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12810:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12810:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12805:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12839:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12862:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12844:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12844:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12839:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12886:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12888:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12888:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12888:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12883:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12876:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:9:3"
															},
															"nodeType": "YulIf",
															"src": "12873:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12917:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12926:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12929:1:3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12922:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12922:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12917:1:3"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12784:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12787:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12793:1:3",
														"type": ""
													}
												],
												"src": "12761:176:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12971:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12991:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12981:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12981:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12981:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13085:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13088:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13109:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13112:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13102:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13102:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13102:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12943:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13157:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13174:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13177:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13167:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13167:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13271:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13274:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13264:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13264:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13264:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13295:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13298:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13288:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13288:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13288:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13129:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13343:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13360:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13363:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13353:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13353:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13457:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13460:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13450:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13450:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13450:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13484:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13474:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13315:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13529:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13546:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13549:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13636:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13667:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13670:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13660:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13660:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13501:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13776:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13793:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13796:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13786:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13786:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13786:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13687:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13899:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13916:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13919:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13909:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13810:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14022:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14039:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14042:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14032:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14032:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13933:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14145:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14162:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14165:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14155:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14155:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14056:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14227:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14237:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14255:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14262:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14251:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14251:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14271:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14267:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14267:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14247:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14237:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14210:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14220:6:3",
														"type": ""
													}
												],
												"src": "14179:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14393:60:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14415:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14423:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14411:14:3"
																	},
																	{
																		"hexValue": "526f6c6c20696e2070726f6772657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14427:18:3",
																		"type": "",
																		"value": "Roll in progress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14404:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14404:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14404:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14385:6:3",
														"type": ""
													}
												],
												"src": "14287:166:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14565:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14587:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14583:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14583:14:3"
																	},
																	{
																		"hexValue": "44696365206e6f7420726f6c6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14599:17:3",
																		"type": "",
																		"value": "Dice not rolled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14576:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14576:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14557:6:3",
														"type": ""
													}
												],
												"src": "14459:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14736:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14758:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14766:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14754:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14754:14:3"
																	},
																	{
																		"hexValue": "416c726561647920726f6c6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14770:16:3",
																		"type": "",
																		"value": "Already rolled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14747:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14747:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14747:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14728:6:3",
														"type": ""
													}
												],
												"src": "14630:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14843:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14900:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14909:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14912:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14902:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14902:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14902:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14866:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14891:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14873:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14873:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14863:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14863:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14856:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14856:43:3"
															},
															"nodeType": "YulIf",
															"src": "14853:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14836:5:3",
														"type": ""
													}
												],
												"src": "14800:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14971:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15028:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15037:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15040:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15030:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15030:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15030:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14994:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15019:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15001:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15001:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14991:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14991:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14984:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14984:43:3"
															},
															"nodeType": "YulIf",
															"src": "14981:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14964:5:3",
														"type": ""
													}
												],
												"src": "14928:122:3"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228(memPtr) {\n\n        mstore(add(memPtr, 0), \"Roll in progress\")\n\n    }\n\n    function store_literal_in_memory_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dice not rolled\")\n\n    }\n\n    function store_literal_in_memory_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already rolled\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"317": [
									{
										"length": 32,
										"start": 493
									},
									{
										"length": 32,
										"start": 577
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80634aa66b281161005b5780634aa66b28146100ec578063646f2a161461011c578063cfb096511461014c578063e8ace5d71461017c5761007d565b806315c6aee2146100825780631fe543e3146100b2578063302bcc57146100ce575b600080fd5b61009c60048036038101906100979190610b5c565b6101ac565b6040516100a99190610d69565b60405180910390f35b6100cc60048036038101906100c79190610bb6565b6101eb565b005b6100d66102ab565b6040516100e39190610e82565b60405180910390f35b61010660048036038101906101019190610b5c565b6102b8565b6040516101139190610e9d565b60405180910390f35b61013660048036038101906101319190610b2f565b6103bb565b6040516101439190610e9d565b60405180910390f35b61016660048036038101906101619190610b2f565b610511565b6040516101739190610dad565b60405180910390f35b61019660048036038101906101919190610b2f565b610604565b6040516101a39190610e82565b60405180910390f35b600481815481106101bc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029d57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610294929190610d84565b60405180910390fd5b6102a78282610970565b5050565b6000600480549050905090565b600080604051806102800160405280600160ff168152602001600260ff168152602001600360ff168152602001600460ff168152602001600560ff168152602001600660ff168152602001600760ff168152602001600860ff168152602001600960ff168152602001600a60ff168152602001600b60ff168152602001600c60ff168152602001600d60ff168152602001600e60ff168152602001600f60ff168152602001601060ff168152602001601160ff168152602001601260ff168152602001601360ff168152602001601460ff1681525090508060018461039d9190610fa9565b601481106103ae576103ad61116b565b5b6020020151915050919050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690610e42565b60405180910390fd5b602a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610e22565b60405180910390fd5b61050a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102b8565b9050919050565b60606004829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048054806020026020016040519081016040528092919081815260200182805480156105f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ae575b50505050509050919050565b60006003600a9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066057600080fd5b600061066a6102ab565b905060005b81811015610969578373ffffffffffffffffffffffffffffffffffffffff16600482815481106106a2576106a161116b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ee57610969565b6106f784610511565b506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190610e62565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600254600060149054906101000a900467ffffffffffffffff16600360049054906101000a900461ffff16600360009054906101000a900463ffffffff16600360069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610827959493929190610dcf565b602060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610b89565b9250836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602a600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16837f3e7fdeab84c01ce5308321caa0b460e1c4ec3c7099223d79634d9a71d99932e360405160405180910390a3808061096190611093565b91505061066f565b5050919050565b6000600160148360008151811061098a5761098961116b565b5b602002602001015161099c91906110dc565b6109a69190610f53565b905080600660006005600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080837f54d97c1f7e5abad75bd421455cd4dd296852a52e1ea721f2cdb66d06fa2082a960405160405180910390a3505050565b6000610a65610a6084610edd565b610eb8565b90508083825260208201905082856020860282011115610a8857610a876111ce565b5b60005b85811015610ab85781610a9e8882610b05565b845260208401935060208301925050600181019050610a8b565b5050509392505050565b600081359050610ad181611269565b92915050565b600082601f830112610aec57610aeb6111c9565b5b8135610afc848260208601610a52565b91505092915050565b600081359050610b1481611280565b92915050565b600081519050610b2981611280565b92915050565b600060208284031215610b4557610b446111d8565b5b6000610b5384828501610ac2565b91505092915050565b600060208284031215610b7257610b716111d8565b5b6000610b8084828501610b05565b91505092915050565b600060208284031215610b9f57610b9e6111d8565b5b6000610bad84828501610b1a565b91505092915050565b60008060408385031215610bcd57610bcc6111d8565b5b6000610bdb85828601610b05565b925050602083013567ffffffffffffffff811115610bfc57610bfb6111d3565b5b610c0885828601610ad7565b9150509250929050565b6000610c1e8383610c2a565b60208301905092915050565b610c3381610fdd565b82525050565b610c4281610fdd565b82525050565b6000610c5382610f19565b610c5d8185610f31565b9350610c6883610f09565b8060005b83811015610c99578151610c808882610c12565b9750610c8b83610f24565b925050600181019050610c6c565b5085935050505092915050565b610caf81610fef565b82525050565b6000610cc2601083610f42565b9150610ccd826111ee565b602082019050919050565b6000610ce5600f83610f42565b9150610cf082611217565b602082019050919050565b6000610d08600e83610f42565b9150610d1382611240565b602082019050919050565b610d2781610ff9565b82525050565b610d3681611027565b82525050565b610d4581611031565b82525050565b610d5481611041565b82525050565b610d6381611055565b82525050565b6000602082019050610d7e6000830184610c39565b92915050565b6000604082019050610d996000830185610c39565b610da66020830184610c39565b9392505050565b60006020820190508181036000830152610dc78184610c48565b905092915050565b600060a082019050610de46000830188610ca6565b610df16020830187610d4b565b610dfe6040830186610d1e565b610e0b6060830185610d3c565b610e186080830184610d3c565b9695505050505050565b60006020820190508181036000830152610e3b81610cb5565b9050919050565b60006020820190508181036000830152610e5b81610cd8565b9050919050565b60006020820190508181036000830152610e7b81610cfb565b9050919050565b6000602082019050610e976000830184610d2d565b92915050565b6000602082019050610eb26000830184610d5a565b92915050565b6000610ec2610ed3565b9050610ece8282611062565b919050565b6000604051905090565b600067ffffffffffffffff821115610ef857610ef761119a565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f5e82611027565b9150610f6983611027565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f9e57610f9d61110d565b5b828201905092915050565b6000610fb482611027565b9150610fbf83611027565b925082821015610fd257610fd161110d565b5b828203905092915050565b6000610fe882611007565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b61106b826111dd565b810181811067ffffffffffffffff8211171561108a5761108961119a565b5b80604052505050565b600061109e82611027565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110d1576110d061110d565b5b600182019050919050565b60006110e782611027565b91506110f283611027565b9250826111025761110161113c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f526f6c6c20696e2070726f677265737300000000000000000000000000000000600082015250565b7f44696365206e6f7420726f6c6c65640000000000000000000000000000000000600082015250565b7f416c726561647920726f6c6c6564000000000000000000000000000000000000600082015250565b61127281610fdd565b811461127d57600080fd5b50565b61128981611027565b811461129457600080fd5b5056fea26469706673582212208b349647dee6a6b0907b4c01b473126474ad87d72864a82ef5f5c06b29f7a57064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA66B28 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4AA66B28 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x646F2A16 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xCFB09651 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE8ACE5D7 EQ PUSH2 0x17C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x15C6AEE2 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x302BCC57 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29D JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP3 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A7 DUP3 DUP3 PUSH2 0x970 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x13 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x14 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 DUP5 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2A PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5AE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66A PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x116B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6EE JUMPI PUSH2 0x969 JUMP JUMPDEST PUSH2 0x6F7 DUP5 PUSH2 0x511 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x771 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0x2 SLOAD PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2A PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3E7FDEAB84C01CE5308321CAA0B460E1C4EC3C7099223D79634D9A71D99932E3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x66F JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH32 0x54D97C1F7E5ABAD75BD421455CD4DD296852A52E1EA721F2CDB66D06FA2082A9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA60 DUP5 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP2 PUSH2 0xA9E DUP9 DUP3 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA8B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD1 DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB14 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB53 DUP5 DUP3 DUP6 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAD DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x11D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDB DUP6 DUP3 DUP7 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0x11D3 JUMP JUMPDEST JUMPDEST PUSH2 0xC08 DUP6 DUP3 DUP7 ADD PUSH2 0xAD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP4 DUP4 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC53 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xC5D DUP2 DUP6 PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP PUSH2 0xC68 DUP4 PUSH2 0xF09 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC99 JUMPI DUP2 MLOAD PUSH2 0xC80 DUP9 DUP3 PUSH2 0xC12 JUMP JUMPDEST SWAP8 POP PUSH2 0xC8B DUP4 PUSH2 0xF24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAF DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC2 PUSH1 0x10 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0xF DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD08 PUSH1 0xE DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0xD13 DUP3 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD36 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH2 0x1031 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0x1055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xDA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC7 DUP2 DUP5 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xDE4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xDF1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xDFE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xE0B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xE18 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD3C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3B DUP2 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5B DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE97 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH2 0xECE DUP3 DUP3 PUSH2 0x1062 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x119A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0xF69 DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBF DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP3 PUSH2 0x11DD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109E DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x10D1 JUMPI PUSH2 0x10D0 PUSH2 0x110D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 DUP3 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F2 DUP4 PUSH2 0x1027 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x113C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F6C6C20696E2070726F677265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44696365206E6F7420726F6C6C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920726F6C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1272 DUP2 PUSH2 0xFDD JUMP JUMPDEST DUP2 EQ PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP2 EQ PUSH2 0x1294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 CALLVALUE SWAP7 SELFBALANCE 0xDE 0xE6 0xA6 0xB0 SWAP1 PUSH28 0x4C01B473126474AD87D72864A82EF5F5C06B29F7A57064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "577:6595:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2345:101:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6672:409;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6281:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2124:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3946:1070;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1999:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6618:256:1:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;2345:101:0:-;2389:7;2416:15;:22;;;;2409:29;;2345:101;:::o;6672:409::-;6723:5;6797:22;:77;;;;;;;;6823:1;6797:77;;;;;;6825:1;6797:77;;;;;;6827:1;6797:77;;;;;;6829:1;6797:77;;;;;;6831:1;6797:77;;;;;;6833:1;6797:77;;;;;;6835:1;6797:77;;;;;;6837:1;6797:77;;;;;;6839:1;6797:77;;;;;;6841:2;6797:77;;;;;;6844:2;6797:77;;;;;;6847:2;6797:77;;;;;;6850:2;6797:77;;;;;;6853:2;6797:77;;;;;;6856:2;6797:77;;;;;;6859:2;6797:77;;;;;;6862:2;6797:77;;;;;;6865:2;6797:77;;;;;;6868:2;6797:77;;;;;;6871:2;6797:77;;;;;;;7060:5;7071:1;7066:2;:6;;;;:::i;:::-;7060:13;;;;;;;:::i;:::-;;;;;;7053:20;;;6672:409;;;:::o;6281:257::-;6340:5;6387:1;6366:9;:17;6376:6;6366:17;;;;;;;;;;;;;;;;:22;;6358:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;790:2;6427:9;:17;6437:6;6427:17;;;;;;;;;;;;;;;;:37;;6419:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6503:27;6512:9;:17;6522:6;6512:17;;;;;;;;;;;;;;;;6503:8;:27::i;:::-;6496:34;;6281:257;;;:::o;2124:151::-;2176:16;2206:15;2227:6;2206:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:15;2245:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:151;;;:::o;3946:1070::-;4010:17;7141:7;;;;;;;;;;;7127:21;;:10;:21;;;7119:30;;;;;;4106:15:::1;4124:13;:11;:13::i;:::-;4106:31;;4153:9;4148:861;4172:7;4168:1;:11;4148:861;;;4224:6;4202:28;;:15;4218:1;4202:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;;4198:800;;;4296:5;;4198:800;4404:19;4416:6;4404:11;:19::i;:::-;;4471:1;4450:9;:17;4460:6;4450:17;;;;;;;;;;;;;;;;:22;4442:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4593:11;::::0;::::1;;;;;;;;:30;;;4646:9;;4678:16;;;;;;;;;;;4717:20;;;;;;;;;;;4760:16;;;;;;;;;;;4799:8;;;;;;;;;;;4593:233;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4581:245;;4868:6;4845:9;:20;4855:9;4845:20;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;790:2;4893:9;:17;4903:6;4893:17;;;;;;;;;;;;;;;:36;;;;4975:6;4953:29;;4964:9;4953:29;;;;;;;;;;4181:3;;;;;:::i;:::-;;;;4148:861;;;;4029:987;3946:1070:::0;;;:::o;5854:258::-;5960:16;6003:1;5997:2;5980:11;5992:1;5980:14;;;;;;;;:::i;:::-;;;;;;;;:19;;;;:::i;:::-;5979:25;;;;:::i;:::-;5960:44;;6049:8;6015:9;:31;6025:9;:20;6035:9;6025:20;;;;;;;;;;;;;;;;;;;;;6015:31;;;;;;;;;;;;;;;:42;;;;6095:8;6084:9;6073:31;;;;;;;;;;5949:163;5854:258;;:::o;24:722:3:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:139::-;798:5;836:6;823:20;814:29;;852:33;879:5;852:33;:::i;:::-;752:139;;;;:::o;914:370::-;985:5;1034:3;1027:4;1019:6;1015:17;1011:27;1001:122;;1042:79;;:::i;:::-;1001:122;1159:6;1146:20;1184:94;1274:3;1266:6;1259:4;1251:6;1247:17;1184:94;:::i;:::-;1175:103;;991:293;914:370;;;;:::o;1290:139::-;1336:5;1374:6;1361:20;1352:29;;1390:33;1417:5;1390:33;:::i;:::-;1290:139;;;;:::o;1435:143::-;1492:5;1523:6;1517:13;1508:22;;1539:33;1566:5;1539:33;:::i;:::-;1435:143;;;;:::o;1584:329::-;1643:6;1692:2;1680:9;1671:7;1667:23;1663:32;1660:119;;;1698:79;;:::i;:::-;1660:119;1818:1;1843:53;1888:7;1879:6;1868:9;1864:22;1843:53;:::i;:::-;1833:63;;1789:117;1584:329;;;;:::o;1919:::-;1978:6;2027:2;2015:9;2006:7;2002:23;1998:32;1995:119;;;2033:79;;:::i;:::-;1995:119;2153:1;2178:53;2223:7;2214:6;2203:9;2199:22;2178:53;:::i;:::-;2168:63;;2124:117;1919:329;;;;:::o;2254:351::-;2324:6;2373:2;2361:9;2352:7;2348:23;2344:32;2341:119;;;2379:79;;:::i;:::-;2341:119;2499:1;2524:64;2580:7;2571:6;2560:9;2556:22;2524:64;:::i;:::-;2514:74;;2470:128;2254:351;;;;:::o;2611:684::-;2704:6;2712;2761:2;2749:9;2740:7;2736:23;2732:32;2729:119;;;2767:79;;:::i;:::-;2729:119;2887:1;2912:53;2957:7;2948:6;2937:9;2933:22;2912:53;:::i;:::-;2902:63;;2858:117;3042:2;3031:9;3027:18;3014:32;3073:18;3065:6;3062:30;3059:117;;;3095:79;;:::i;:::-;3059:117;3200:78;3270:7;3261:6;3250:9;3246:22;3200:78;:::i;:::-;3190:88;;2985:303;2611:684;;;;;:::o;3301:179::-;3370:10;3391:46;3433:3;3425:6;3391:46;:::i;:::-;3469:4;3464:3;3460:14;3446:28;;3301:179;;;;:::o;3486:108::-;3563:24;3581:5;3563:24;:::i;:::-;3558:3;3551:37;3486:108;;:::o;3600:118::-;3687:24;3705:5;3687:24;:::i;:::-;3682:3;3675:37;3600:118;;:::o;3754:732::-;3873:3;3902:54;3950:5;3902:54;:::i;:::-;3972:86;4051:6;4046:3;3972:86;:::i;:::-;3965:93;;4082:56;4132:5;4082:56;:::i;:::-;4161:7;4192:1;4177:284;4202:6;4199:1;4196:13;4177:284;;;4278:6;4272:13;4305:63;4364:3;4349:13;4305:63;:::i;:::-;4298:70;;4391:60;4444:6;4391:60;:::i;:::-;4381:70;;4237:224;4224:1;4221;4217:9;4212:14;;4177:284;;;4181:14;4477:3;4470:10;;3878:608;;;3754:732;;;;:::o;4492:118::-;4579:24;4597:5;4579:24;:::i;:::-;4574:3;4567:37;4492:118;;:::o;4616:366::-;4758:3;4779:67;4843:2;4838:3;4779:67;:::i;:::-;4772:74;;4855:93;4944:3;4855:93;:::i;:::-;4973:2;4968:3;4964:12;4957:19;;4616:366;;;:::o;4988:::-;5130:3;5151:67;5215:2;5210:3;5151:67;:::i;:::-;5144:74;;5227:93;5316:3;5227:93;:::i;:::-;5345:2;5340:3;5336:12;5329:19;;4988:366;;;:::o;5360:::-;5502:3;5523:67;5587:2;5582:3;5523:67;:::i;:::-;5516:74;;5599:93;5688:3;5599:93;:::i;:::-;5717:2;5712:3;5708:12;5701:19;;5360:366;;;:::o;5732:115::-;5817:23;5834:5;5817:23;:::i;:::-;5812:3;5805:36;5732:115;;:::o;5853:118::-;5940:24;5958:5;5940:24;:::i;:::-;5935:3;5928:37;5853:118;;:::o;5977:115::-;6062:23;6079:5;6062:23;:::i;:::-;6057:3;6050:36;5977:115;;:::o;6098:::-;6183:23;6200:5;6183:23;:::i;:::-;6178:3;6171:36;6098:115;;:::o;6219:112::-;6302:22;6318:5;6302:22;:::i;:::-;6297:3;6290:35;6219:112;;:::o;6337:222::-;6430:4;6468:2;6457:9;6453:18;6445:26;;6481:71;6549:1;6538:9;6534:17;6525:6;6481:71;:::i;:::-;6337:222;;;;:::o;6565:332::-;6686:4;6724:2;6713:9;6709:18;6701:26;;6737:71;6805:1;6794:9;6790:17;6781:6;6737:71;:::i;:::-;6818:72;6886:2;6875:9;6871:18;6862:6;6818:72;:::i;:::-;6565:332;;;;;:::o;6903:373::-;7046:4;7084:2;7073:9;7069:18;7061:26;;7133:9;7127:4;7123:20;7119:1;7108:9;7104:17;7097:47;7161:108;7264:4;7255:6;7161:108;:::i;:::-;7153:116;;6903:373;;;;:::o;7282:648::-;7479:4;7517:3;7506:9;7502:19;7494:27;;7531:71;7599:1;7588:9;7584:17;7575:6;7531:71;:::i;:::-;7612:70;7678:2;7667:9;7663:18;7654:6;7612:70;:::i;:::-;7692;7758:2;7747:9;7743:18;7734:6;7692:70;:::i;:::-;7772;7838:2;7827:9;7823:18;7814:6;7772:70;:::i;:::-;7852:71;7918:3;7907:9;7903:19;7894:6;7852:71;:::i;:::-;7282:648;;;;;;;;:::o;7936:419::-;8102:4;8140:2;8129:9;8125:18;8117:26;;8189:9;8183:4;8179:20;8175:1;8164:9;8160:17;8153:47;8217:131;8343:4;8217:131;:::i;:::-;8209:139;;7936:419;;;:::o;8361:::-;8527:4;8565:2;8554:9;8550:18;8542:26;;8614:9;8608:4;8604:20;8600:1;8589:9;8585:17;8578:47;8642:131;8768:4;8642:131;:::i;:::-;8634:139;;8361:419;;;:::o;8786:::-;8952:4;8990:2;8979:9;8975:18;8967:26;;9039:9;9033:4;9029:20;9025:1;9014:9;9010:17;9003:47;9067:131;9193:4;9067:131;:::i;:::-;9059:139;;8786:419;;;:::o;9211:222::-;9304:4;9342:2;9331:9;9327:18;9319:26;;9355:71;9423:1;9412:9;9408:17;9399:6;9355:71;:::i;:::-;9211:222;;;;:::o;9439:214::-;9528:4;9566:2;9555:9;9551:18;9543:26;;9579:67;9643:1;9632:9;9628:17;9619:6;9579:67;:::i;:::-;9439:214;;;;:::o;9659:129::-;9693:6;9720:20;;:::i;:::-;9710:30;;9749:33;9777:4;9769:6;9749:33;:::i;:::-;9659:129;;;:::o;9794:75::-;9827:6;9860:2;9854:9;9844:19;;9794:75;:::o;9875:311::-;9952:4;10042:18;10034:6;10031:30;10028:56;;;10064:18;;:::i;:::-;10028:56;10114:4;10106:6;10102:17;10094:25;;10174:4;10168;10164:15;10156:23;;9875:311;;;:::o;10192:132::-;10259:4;10282:3;10274:11;;10312:4;10307:3;10303:14;10295:22;;10192:132;;;:::o;10330:114::-;10397:6;10431:5;10425:12;10415:22;;10330:114;;;:::o;10450:113::-;10520:4;10552;10547:3;10543:14;10535:22;;10450:113;;;:::o;10569:184::-;10668:11;10702:6;10697:3;10690:19;10742:4;10737:3;10733:14;10718:29;;10569:184;;;;:::o;10759:169::-;10843:11;10877:6;10872:3;10865:19;10917:4;10912:3;10908:14;10893:29;;10759:169;;;;:::o;10934:305::-;10974:3;10993:20;11011:1;10993:20;:::i;:::-;10988:25;;11027:20;11045:1;11027:20;:::i;:::-;11022:25;;11181:1;11113:66;11109:74;11106:1;11103:81;11100:107;;;11187:18;;:::i;:::-;11100:107;11231:1;11228;11224:9;11217:16;;10934:305;;;;:::o;11245:191::-;11285:4;11305:20;11323:1;11305:20;:::i;:::-;11300:25;;11339:20;11357:1;11339:20;:::i;:::-;11334:25;;11378:1;11375;11372:8;11369:34;;;11383:18;;:::i;:::-;11369:34;11428:1;11425;11421:9;11413:17;;11245:191;;;;:::o;11442:96::-;11479:7;11508:24;11526:5;11508:24;:::i;:::-;11497:35;;11442:96;;;:::o;11544:77::-;11581:7;11610:5;11599:16;;11544:77;;;:::o;11627:89::-;11663:7;11703:6;11696:5;11692:18;11681:29;;11627:89;;;:::o;11722:126::-;11759:7;11799:42;11792:5;11788:54;11777:65;;11722:126;;;:::o;11854:77::-;11891:7;11920:5;11909:16;;11854:77;;;:::o;11937:93::-;11973:7;12013:10;12006:5;12002:22;11991:33;;11937:93;;;:::o;12036:101::-;12072:7;12112:18;12105:5;12101:30;12090:41;;12036:101;;;:::o;12143:86::-;12178:7;12218:4;12211:5;12207:16;12196:27;;12143:86;;;:::o;12235:281::-;12318:27;12340:4;12318:27;:::i;:::-;12310:6;12306:40;12448:6;12436:10;12433:22;12412:18;12400:10;12397:34;12394:62;12391:88;;;12459:18;;:::i;:::-;12391:88;12499:10;12495:2;12488:22;12278:238;12235:281;;:::o;12522:233::-;12561:3;12584:24;12602:5;12584:24;:::i;:::-;12575:33;;12630:66;12623:5;12620:77;12617:103;;;12700:18;;:::i;:::-;12617:103;12747:1;12740:5;12736:13;12729:20;;12522:233;;;:::o;12761:176::-;12793:1;12810:20;12828:1;12810:20;:::i;:::-;12805:25;;12844:20;12862:1;12844:20;:::i;:::-;12839:25;;12883:1;12873:35;;12888:18;;:::i;:::-;12873:35;12929:1;12926;12922:9;12917:14;;12761:176;;;;:::o;12943:180::-;12991:77;12988:1;12981:88;13088:4;13085:1;13078:15;13112:4;13109:1;13102:15;13129:180;13177:77;13174:1;13167:88;13274:4;13271:1;13264:15;13298:4;13295:1;13288:15;13315:180;13363:77;13360:1;13353:88;13460:4;13457:1;13450:15;13484:4;13481:1;13474:15;13501:180;13549:77;13546:1;13539:88;13646:4;13643:1;13636:15;13670:4;13667:1;13660:15;13687:117;13796:1;13793;13786:12;13810:117;13919:1;13916;13909:12;13933:117;14042:1;14039;14032:12;14056:117;14165:1;14162;14155:12;14179:102;14220:6;14271:2;14267:7;14262:2;14255:5;14251:14;14247:28;14237:38;;14179:102;;;:::o;14287:166::-;14427:18;14423:1;14415:6;14411:14;14404:42;14287:166;:::o;14459:165::-;14599:17;14595:1;14587:6;14583:14;14576:41;14459:165;:::o;14630:164::-;14770:16;14766:1;14758:6;14754:14;14747:40;14630:164;:::o;14800:122::-;14873:24;14891:5;14873:24;:::i;:::-;14866:5;14863:35;14853:63;;14912:1;14909;14902:12;14853:63;14800:122;:::o;14928:::-;15001:24;15019:5;15001:24;:::i;:::-;14994:5;14991:35;14981:63;;15040:1;15037;15030:12;14981:63;14928:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "962600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"collectBonus(address)": "infinite",
								"createPlayer(address)": "infinite",
								"getBonus(uint256)": "infinite",
								"playerAddresses(uint256)": "4957",
								"playerCount()": "2490",
								"rawFulfillRandomWords(uint256,uint256[])": "infinite",
								"storePlayer(address)": "infinite"
							},
							"internal": {
								"fulfillRandomWords(uint256,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1047,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "2CA8E0C643BDE4C2E08AB1FA0DA3401ADAD7734D"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1022,
									"end": 1089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1317,
									"end": 1383,
									"name": "PUSH",
									"source": 0,
									"value": "79D3D8832D904592C0BF9818B621522C988BB8B0C05CDC3B15AEA1B6E8DB0C15"
								},
								{
									"begin": 1297,
									"end": 1383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1383,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1297,
									"end": 1383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "9C40"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1650,
									"end": 1681,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1920,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5616,
									"end": 5631,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5556,
									"end": 5636,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3086,
									"end": 3100,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3057,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3057,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3046,
									"end": 3101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3122,
									"end": 3132,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3112,
									"end": 3132,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3143,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 3184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 148,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 148,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 63,
									"end": 68,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 88,
									"end": 101,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 79,
									"end": 101,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 79,
									"end": 101,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 110,
									"end": 142,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 110,
									"end": 142,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 110,
									"end": 142,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 110,
									"end": 142,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 110,
									"end": 142,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 148,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 148,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 148,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 148,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 148,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 154,
									"end": 503,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 154,
									"end": 503,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 223,
									"end": 229,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 274,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 269,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 258,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 247,
									"end": 270,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 243,
									"end": 275,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 240,
									"end": 359,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 240,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 359,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 278,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 278,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 278,
									"end": 357,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 278,
									"end": 357,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 278,
									"end": 357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 240,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 478,
									"end": 485,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 469,
									"end": 475,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 458,
									"end": 467,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 454,
									"end": 476,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 423,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 423,
									"end": 486,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 423,
									"end": 486,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 423,
									"end": 486,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 413,
									"end": 486,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 413,
									"end": 486,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 369,
									"end": 496,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 154,
									"end": 503,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 154,
									"end": 503,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 154,
									"end": 503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 154,
									"end": 503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 154,
									"end": 503,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 590,
									"end": 691,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 590,
									"end": 691,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 626,
									"end": 633,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 684,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 655,
									"end": 685,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 644,
									"end": 685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 644,
									"end": 685,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 590,
									"end": 691,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 590,
									"end": 691,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 590,
									"end": 691,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 590,
									"end": 691,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 820,
									"end": 937,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 820,
									"end": 937,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 929,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 927,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 919,
									"end": 931,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 943,
									"end": 1063,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 943,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1015,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1032,
									"end": 1037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1015,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1015,
									"end": 1038,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1015,
									"end": 1038,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1015,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1008,
									"end": 1013,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1005,
									"end": 1039,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1057,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 995,
									"end": 1057,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1053,
									"end": 1054,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1043,
									"end": 1055,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1057,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 995,
									"end": 1057,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 943,
									"end": 1063,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 943,
									"end": 1063,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "317"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 7172,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b349647dee6a6b0907b4c01b473126474ad87d72864a82ef5f5c06b29f7a57064736f6c63430008070033",
									".code": [
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "4AA66B28"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "4AA66B28"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "646F2A16"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "CFB09651"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "E8ACE5D7"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "15C6AEE2"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "1FE543E3"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "302BCC57"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 7172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6745,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6798,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 1,
											"value": "1CF993F400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2416,
											"end": 2438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6823,
											"end": 6824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6832,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6859,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6862,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6870,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 7081,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6358,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 6427,
											"end": 6436,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6419,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6503,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6512,
											"end": 6521,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6503,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6503,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6503,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6503,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2206,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7127,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7127,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4124,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4179,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4202,
											"end": 4230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4202,
											"end": 4230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4198,
											"end": 4998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4998,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4198,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4416,
											"end": 4422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4466,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4442,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "5D3B1D30"
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4593,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4864,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4929,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "3E7FDEAB84C01CE5308321CAA0B460E1C4EC3C7099223D79634D9A71D99932E3"
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4982,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 5009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 5016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 5016,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6112,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5854,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5997,
											"end": 5999,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5980,
											"end": 5991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5992,
											"end": 5993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6024,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6034,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6044,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6084,
											"end": 6093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "PUSH",
											"source": 0,
											"value": "54D97C1F7E5ABAD75BD421455CD4DD296852A52E1EA721F2CDB66D06FA2082A9"
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6073,
											"end": 6104,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5949,
											"end": 6112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 752,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 798,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 823,
											"end": 843,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 852,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 852,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 752,
											"end": 891,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 752,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 752,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 891,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1274,
											"end": 1277,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1390,
											"end": 1423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1423,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1390,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1429,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1578,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1694,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1678,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1779,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1660,
											"end": 1779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1698,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1698,
											"end": 1777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1698,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1779,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1660,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1888,
											"end": 1895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1843,
											"end": 1896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1843,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1913,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2013,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2030,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1995,
											"end": 2114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2033,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2033,
											"end": 2112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2033,
											"end": 2112,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2033,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1995,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2223,
											"end": 2230,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2178,
											"end": 2231,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2231,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2178,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2124,
											"end": 2241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2248,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2376,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2341,
											"end": 2460,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2460,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2341,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2524,
											"end": 2588,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2524,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2759,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2729,
											"end": 2848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2767,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2767,
											"end": 2846,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2767,
											"end": 2846,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2767,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2848,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2729,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2957,
											"end": 2964,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2912,
											"end": 2965,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2965,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3046,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3095,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3095,
											"end": 3174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3095,
											"end": 3174,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3095,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3200,
											"end": 3278,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3278,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3200,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 3295,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3467,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3480,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3581,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3600,
											"end": 3718,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3600,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3718,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3902,
											"end": 3956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3902,
											"end": 3956,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3902,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3972,
											"end": 4058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3972,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3972,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4082,
											"end": 4138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4082,
											"end": 4138,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4082,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4209,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4364,
											"end": 4367,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4305,
											"end": 4368,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4368,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4305,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4368,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4391,
											"end": 4451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4391,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4451,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4225,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4177,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4480,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 4486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 4486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 4486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4486,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4579,
											"end": 4603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 4603,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4579,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4758,
											"end": 4761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4779,
											"end": 4846,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4779,
											"end": 4846,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4779,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4855,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4944,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4855,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4855,
											"end": 4948,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 4948,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4855,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4973,
											"end": 4975,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4957,
											"end": 4976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4957,
											"end": 4976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4982,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 5210,
											"end": 5213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5151,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5151,
											"end": 5218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5151,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5144,
											"end": 5218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5144,
											"end": 5218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5316,
											"end": 5319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5227,
											"end": 5320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5227,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5354,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5523,
											"end": 5590,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5523,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5599,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5599,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5599,
											"end": 5692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5599,
											"end": 5692,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5599,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5708,
											"end": 5720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5726,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5834,
											"end": 5839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5853,
											"end": 5971,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5853,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5928,
											"end": 5965,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5971,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5977,
											"end": 6092,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5977,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6079,
											"end": 6084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6062,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6092,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6098,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6098,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6200,
											"end": 6205,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6213,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6219,
											"end": 6331,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6219,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6297,
											"end": 6300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6325,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6331,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6470,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6547,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6531,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6481,
											"end": 6552,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6552,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6481,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6709,
											"end": 6727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6781,
											"end": 6787,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6737,
											"end": 6808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6737,
											"end": 6808,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6737,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6818,
											"end": 6890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6818,
											"end": 6890,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6818,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6897,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7104,
											"end": 7121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7261,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7161,
											"end": 7269,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7269,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7161,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7276,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7520,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7521,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7531,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7597,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7584,
											"end": 7601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7581,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7531,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7531,
											"end": 7602,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7602,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7531,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7612,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7660,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7612,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7612,
											"end": 7682,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7612,
											"end": 7682,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7612,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7734,
											"end": 7740,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 7692,
											"end": 7762,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7692,
											"end": 7762,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7692,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7827,
											"end": 7836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7772,
											"end": 7842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7772,
											"end": 7842,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7772,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7918,
											"end": 7921,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7907,
											"end": 7916,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7894,
											"end": 7900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7852,
											"end": 7923,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7852,
											"end": 7923,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7852,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7930,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8142,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 8138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8173,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8160,
											"end": 8177,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8153,
											"end": 8200,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8217,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8343,
											"end": 8347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8217,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8217,
											"end": 8348,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8217,
											"end": 8348,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8217,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8355,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8527,
											"end": 8531,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8565,
											"end": 8567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8550,
											"end": 8568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8614,
											"end": 8623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8600,
											"end": 8601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8598,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8585,
											"end": 8602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8578,
											"end": 8625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 8642,
											"end": 8773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8642,
											"end": 8773,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8642,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8634,
											"end": 8773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8634,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8780,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8952,
											"end": 8956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 8992,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8967,
											"end": 8993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8967,
											"end": 8993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9033,
											"end": 9037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9029,
											"end": 9049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9014,
											"end": 9023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9010,
											"end": 9027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9193,
											"end": 9197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9067,
											"end": 9198,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9198,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9067,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9059,
											"end": 9198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9059,
											"end": 9198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 9205,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9304,
											"end": 9308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9319,
											"end": 9345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9319,
											"end": 9345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9355,
											"end": 9426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9355,
											"end": 9426,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9355,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9433,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9528,
											"end": 9532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9566,
											"end": 9568,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9555,
											"end": 9564,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9543,
											"end": 9569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9543,
											"end": 9569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9643,
											"end": 9644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9619,
											"end": 9625,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9579,
											"end": 9646,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9579,
											"end": 9646,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9579,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9653,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9693,
											"end": 9699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9720,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9720,
											"end": 9740,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9740,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9720,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9749,
											"end": 9782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9749,
											"end": 9782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9749,
											"end": 9782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9749,
											"end": 9782,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9749,
											"end": 9782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9659,
											"end": 9788,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9794,
											"end": 9869,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9794,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9854,
											"end": 9863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9869,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9952,
											"end": 9956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10084,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10028,
											"end": 10084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10084,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10028,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10106,
											"end": 10112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10119,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10174,
											"end": 10178,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10168,
											"end": 10172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10156,
											"end": 10179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10156,
											"end": 10179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 10186,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10259,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10312,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10324,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10425,
											"end": 10437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10520,
											"end": 10524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10547,
											"end": 10550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10543,
											"end": 10557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10535,
											"end": 10557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10535,
											"end": 10557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10563,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10697,
											"end": 10700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10690,
											"end": 10709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10737,
											"end": 10740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10733,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10718,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10718,
											"end": 10747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10753,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10843,
											"end": 10854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 10875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10865,
											"end": 10884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10917,
											"end": 10921,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10908,
											"end": 10922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10928,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10974,
											"end": 10977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 11011,
											"end": 11012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10993,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10993,
											"end": 11013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10993,
											"end": 11013,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10993,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 11013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 11013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 11027,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11109,
											"end": 11183,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11184,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11100,
											"end": 11207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11100,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11100,
											"end": 11207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11100,
											"end": 11207,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11100,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11228,
											"end": 11229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11233,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10934,
											"end": 11239,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11323,
											"end": 11324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11300,
											"end": 11325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11300,
											"end": 11325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11339,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11359,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11372,
											"end": 11380,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11421,
											"end": 11430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11436,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 11526,
											"end": 11531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11538,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11610,
											"end": 11615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11621,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11709,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 11696,
											"end": 11701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11692,
											"end": 11710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11681,
											"end": 11710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11681,
											"end": 11710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11627,
											"end": 11716,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11759,
											"end": 11766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11799,
											"end": 11841,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11792,
											"end": 11797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11788,
											"end": 11842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11777,
											"end": 11842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11777,
											"end": 11842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11848,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11891,
											"end": 11898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11920,
											"end": 11925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11909,
											"end": 11925,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11909,
											"end": 11925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11854,
											"end": 11931,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 11980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12006,
											"end": 12011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12002,
											"end": 12024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11991,
											"end": 12024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11991,
											"end": 12024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12030,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12101,
											"end": 12131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12090,
											"end": 12131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12090,
											"end": 12131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12036,
											"end": 12137,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12178,
											"end": 12185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 12211,
											"end": 12216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12207,
											"end": 12223,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12196,
											"end": 12223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12196,
											"end": 12223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12229,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12235,
											"end": 12516,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12235,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12306,
											"end": 12346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12448,
											"end": 12454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12436,
											"end": 12446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12433,
											"end": 12455,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12400,
											"end": 12410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12397,
											"end": 12431,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12394,
											"end": 12456,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12391,
											"end": 12479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12391,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 12391,
											"end": 12479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12459,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 12459,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 12459,
											"end": 12477,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12459,
											"end": 12477,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 12459,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12391,
											"end": 12479,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 12391,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 12510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12278,
											"end": 12516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12235,
											"end": 12516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12235,
											"end": 12516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12235,
											"end": 12516,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12584,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 12602,
											"end": 12607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12584,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 12584,
											"end": 12608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12584,
											"end": 12608,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 12584,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12630,
											"end": 12696,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12623,
											"end": 12628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12620,
											"end": 12697,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12617,
											"end": 12720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12617,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 12617,
											"end": 12720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12617,
											"end": 12720,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 12617,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12747,
											"end": 12748,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12740,
											"end": 12745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12736,
											"end": 12749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12729,
											"end": 12749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12729,
											"end": 12749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12522,
											"end": 12755,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12793,
											"end": 12794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12810,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 12828,
											"end": 12829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12810,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 12810,
											"end": 12830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12810,
											"end": 12830,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 12810,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12805,
											"end": 12830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12805,
											"end": 12830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 12862,
											"end": 12863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12864,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12873,
											"end": 12908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 12873,
											"end": 12908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12873,
											"end": 12908,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 12873,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12929,
											"end": 12930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12926,
											"end": 12927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12922,
											"end": 12931,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 12937,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12943,
											"end": 13123,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 12943,
											"end": 13123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12991,
											"end": 13068,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12988,
											"end": 12989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13088,
											"end": 13092,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13078,
											"end": 13093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13112,
											"end": 13116,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13109,
											"end": 13110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13102,
											"end": 13117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13129,
											"end": 13309,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 13129,
											"end": 13309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13177,
											"end": 13254,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13174,
											"end": 13175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13274,
											"end": 13278,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 13271,
											"end": 13272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13264,
											"end": 13279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13298,
											"end": 13302,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13315,
											"end": 13495,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 13315,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13363,
											"end": 13440,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13360,
											"end": 13361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13460,
											"end": 13464,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 13457,
											"end": 13458,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13450,
											"end": 13465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13484,
											"end": 13488,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13481,
											"end": 13482,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13489,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13501,
											"end": 13681,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13501,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13549,
											"end": 13626,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13539,
											"end": 13627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13646,
											"end": 13650,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 13643,
											"end": 13644,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13636,
											"end": 13651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13670,
											"end": 13674,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13675,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 13804,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 13687,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13786,
											"end": 13798,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13810,
											"end": 13927,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 13810,
											"end": 13927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13919,
											"end": 13920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13909,
											"end": 13921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13933,
											"end": 14050,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 13933,
											"end": 14050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14032,
											"end": 14044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14056,
											"end": 14173,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 14056,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14165,
											"end": 14166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14162,
											"end": 14163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14155,
											"end": 14167,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14271,
											"end": 14273,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14267,
											"end": 14274,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14262,
											"end": 14264,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14255,
											"end": 14260,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14251,
											"end": 14265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14247,
											"end": 14275,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14237,
											"end": 14275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14237,
											"end": 14275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14281,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14287,
											"end": 14453,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 14287,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "PUSH",
											"source": 3,
											"value": "526F6C6C20696E2070726F677265737300000000000000000000000000000000"
										},
										{
											"begin": 14423,
											"end": 14424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14415,
											"end": 14421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14411,
											"end": 14425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14404,
											"end": 14446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14287,
											"end": 14453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14287,
											"end": 14453,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14459,
											"end": 14624,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 14459,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14599,
											"end": 14616,
											"name": "PUSH",
											"source": 3,
											"value": "44696365206E6F7420726F6C6C65640000000000000000000000000000000000"
										},
										{
											"begin": 14595,
											"end": 14596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14583,
											"end": 14597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14576,
											"end": 14617,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14459,
											"end": 14624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14459,
											"end": 14624,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14630,
											"end": 14794,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14630,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14770,
											"end": 14786,
											"name": "PUSH",
											"source": 3,
											"value": "416C726561647920726F6C6C6564000000000000000000000000000000000000"
										},
										{
											"begin": 14766,
											"end": 14767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14758,
											"end": 14764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14754,
											"end": 14768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14747,
											"end": 14787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14630,
											"end": 14794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14630,
											"end": 14794,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14800,
											"end": 14922,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 14800,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14873,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 14891,
											"end": 14896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14873,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 14873,
											"end": 14897,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14873,
											"end": 14897,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 14873,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14866,
											"end": 14871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14863,
											"end": 14898,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14912,
											"end": 14913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14902,
											"end": 14914,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14800,
											"end": 14922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14800,
											"end": 14922,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14928,
											"end": 15050,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 14928,
											"end": 15050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15001,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 15019,
											"end": 15024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15001,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 15001,
											"end": 15025,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15001,
											"end": 15025,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 15001,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14994,
											"end": 14999,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14991,
											"end": 15026,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14981,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 14981,
											"end": 15044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15040,
											"end": 15041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15030,
											"end": 15042,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14981,
											"end": 15044,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 14981,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14928,
											"end": 15050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14928,
											"end": 15050,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"collectBonus(address)": "646f2a16",
							"createPlayer(address)": "e8ace5d7",
							"getBonus(uint256)": "4aa66b28",
							"playerAddresses(uint256)": "15c6aee2",
							"playerCount()": "302bcc57",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"storePlayer(address)": "cfb09651"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"DiceLanded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"roller\",\"type\":\"address\"}],\"name\":\"DiceRolled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"collectBonus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"roller\",\"type\":\"address\"}],\"name\":\"createPlayer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBonus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"roller\",\"type\":\"address\"}],\"name\":\"storePlayer\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectBonus(address)\":{\"params\":{\"player\":\"address\"},\"returns\":{\"_0\":\"favor as a string\"}},\"constructor\":{\"details\":\"NETWORK: Goerli\",\"params\":{\"subscriptionId\":\"subscription id that this consumer contract can use\"}},\"createPlayer(address)\":{\"details\":\"Warning: if the VRF response is delayed, avoid calling requestRandomness repeatedly as that would give miners/VRF operators latitude about which VRF response arrives first.You must review your implementation details with extreme care.\",\"params\":{\"roller\":\"address of the roller\"}},\"getBonus(uint256)\":{\"params\":{\"id\":\"uint256\"},\"returns\":{\"_0\":\"bonus int\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectBonus(address)\":{\"notice\":\"Get the favor assigned to the player once the address has rolled\"},\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBaseV2\"},\"createPlayer(address)\":{\"notice\":\"Requests randomness\"},\"getBonus(uint256)\":{\"notice\":\"get a random one time bonus from the id\"}},\"notice\":\"Request testnet LINK and ETH here: https://faucets.chain.link/ Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Favors.sol\":\"Favors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Favors.sol\":{\"keccak256\":\"0xb670254faebf9895bde9dcdf91616d33811883fe42215770d29f58e63af83815\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a2e1ee29bfd20535c0769ea19fb61190620318177b44c4fafd6292155895d91\",\"dweb:/ipfs/QmQY2ZCUdtxGDZEPH9N1ZCpH3j5Xp8pqAYyQfFdoLtYMag\"]},\"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153\",\"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "contracts/Favors.sol:Favors",
								"label": "COORDINATOR",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(VRFCoordinatorV2Interface)460"
							},
							{
								"astId": 14,
								"contract": "contracts/Favors.sol:Favors",
								"label": "s_subscriptionId",
								"offset": 20,
								"slot": "0",
								"type": "t_uint64"
							},
							{
								"astId": 17,
								"contract": "contracts/Favors.sol:Favors",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/Favors.sol:Favors",
								"label": "s_keyHash",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 23,
								"contract": "contracts/Favors.sol:Favors",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "3",
								"type": "t_uint32"
							},
							{
								"astId": 26,
								"contract": "contracts/Favors.sol:Favors",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "3",
								"type": "t_uint16"
							},
							{
								"astId": 29,
								"contract": "contracts/Favors.sol:Favors",
								"label": "numWords",
								"offset": 6,
								"slot": "3",
								"type": "t_uint32"
							},
							{
								"astId": 31,
								"contract": "contracts/Favors.sol:Favors",
								"label": "s_owner",
								"offset": 10,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 34,
								"contract": "contracts/Favors.sol:Favors",
								"label": "playerAddresses",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 64,
								"contract": "contracts/Favors.sol:Favors",
								"label": "s_rollers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 68,
								"contract": "contracts/Favors.sol:Favors",
								"label": "s_results",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(VRFCoordinatorV2Interface)460": {
								"encoding": "inplace",
								"label": "contract VRFCoordinatorV2Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectBonus(address)": {
								"notice": "Get the favor assigned to the player once the address has rolled"
							},
							"constructor": {
								"notice": "Constructor inherits VRFConsumerBaseV2"
							},
							"createPlayer(address)": {
								"notice": "Requests randomness"
							},
							"getBonus(uint256)": {
								"notice": "get a random one time bonus from the id"
							}
						},
						"notice": "Request testnet LINK and ETH here: https://faucets.chain.link/ Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/",
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"VRFConsumerBaseV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"VRFCoordinatorV2Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "uint16",
									"name": "minimumRequestConfirmations",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "numWords",
									"type": "uint32"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint64,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint64,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"getRequestConfig()": {
								"returns": {
									"_0": "minimumRequestConfirmations global min for request confirmations",
									"_1": "maxGasLimit global max for request gas limit",
									"_2": "s_provingKeyHashes list of registered key hashes"
								}
							},
							"getSubscription(uint64)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"owner": "- owner of the subscription.",
									"reqCount": "- number of requests for this subscription, determines fee tier."
								}
							},
							"removeConsumer(uint64,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"params": {
									"callbackGasLimit": "- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]",
									"keyHash": "- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.",
									"minimumRequestConfirmations": "- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].",
									"numWords": "- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.",
									"subId": "- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint64)": "82359740",
							"addConsumer(uint64,address)": "7341c10c",
							"cancelSubscription(uint64,address)": "d7ae1d30",
							"createSubscription()": "a21a23e4",
							"getRequestConfig()": "00012291",
							"getSubscription(uint64)": "a47c7696",
							"pendingRequestExists(uint64)": "e82ad7d4",
							"removeConsumer(uint64,address)": "9f87fad7",
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
							"requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153\",\"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"notice": "Request subscription owner transfer."
							},
							"addConsumer(uint64,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint64,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"getRequestConfig()": {
								"notice": "Get configuration relevant for making requests"
							},
							"getSubscription(uint64)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint64,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Favors.sol": {
				"ast": {
					"absolutePath": "contracts/Favors.sol",
					"exportedSymbols": {
						"Favors": [
							306
						],
						"VRFConsumerBaseV2": [
							364
						],
						"VRFCoordinatorV2Interface": [
							460
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 461,
							"src": "60:96:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
							"file": "../node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 365,
							"src": "158:77:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "VRFConsumerBaseV2",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 364,
										"src": "596:17:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "596:17:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "354:217:0",
								"text": " Request testnet LINK and ETH here: https://faucets.chain.link/\n Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/"
							},
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306,
								364
							],
							"name": "Favors",
							"nameLocation": "586:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "ROLL_IN_PROGRESS",
									"nameLocation": "771:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "746:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "746:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3432",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "790:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_42_by_1",
											"typeString": "int_const 42"
										},
										"value": "42"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "COORDINATOR",
									"nameLocation": "825:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "799:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
										"typeString": "contract VRFCoordinatorV2Interface"
									},
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "VRFCoordinatorV2Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 460,
											"src": "799:25:0"
										},
										"referencedDeclaration": 460,
										"src": "799:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
											"typeString": "contract VRFCoordinatorV2Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "s_subscriptionId",
									"nameLocation": "880:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "873:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 13,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "873:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "vrfCoordinator",
									"nameLocation": "1030:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1022:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1022:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832436138453043363433624465344332453038616231664130646133343031416441443737333444",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1047:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2Ca8E0C643bDe4C2E08ab1fA0da3401AdAD7734D"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "s_keyHash",
									"nameLocation": "1305:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1297:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 18,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307837396433643838333264393034353932633062663938313862363231353232633938386262386230633035636463336231356165613162366538646230633135",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1317:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_55104153723005795334282919593149549682351596376072689330761043039986548149269_by_1",
											"typeString": "int_const 5510...(69 digits omitted)...9269"
										},
										"value": "0x79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "callbackGasLimit",
									"nameLocation": "1657:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1650:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 21,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1650:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "3430303030",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1676:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40000_by_1",
											"typeString": "int_const 40000"
										},
										"value": "40000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "requestConfirmations",
									"nameLocation": "1750:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1743:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 24,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1743:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1773:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "numWords",
									"nameLocation": "1908:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1901:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 27,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1901:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1919:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "s_owner",
									"nameLocation": "1935:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1927:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1927:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "15c6aee2",
									"id": 34,
									"mutability": "mutable",
									"name": "playerAddresses",
									"nameLocation": "2016:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1999:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1999:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 33,
										"nodeType": "ArrayTypeName",
										"src": "1999:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2193:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "roller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 42,
															"name": "playerAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2206:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2206:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "2206:28:0"
											},
											{
												"expression": {
													"id": 48,
													"name": "playerAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2252:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 41,
												"id": 49,
												"nodeType": "Return",
												"src": "2245:22:0"
											}
										]
									},
									"functionSelector": "cfb09651",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storePlayer",
									"nameLocation": "2133:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "roller",
												"nameLocation": "2153:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2145:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:16:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2176:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 38,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2176:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 39,
													"nodeType": "ArrayTypeName",
													"src": "2176:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:18:0"
									},
									"scope": 306,
									"src": "2124:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2398:48:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 56,
														"name": "playerAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2416:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2416:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 58,
												"nodeType": "Return",
												"src": "2409:29:0"
											}
										]
									},
									"functionSelector": "302bcc57",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playerCount",
									"nameLocation": "2354:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2365:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:9:0"
									},
									"scope": 306,
									"src": "2345:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "s_rollers",
									"nameLocation": "2524:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2488:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 63,
										"keyType": {
											"id": 61,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2496:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2488:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 62,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2507:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 68,
									"mutability": "mutable",
									"name": "s_results",
									"nameLocation": "2611:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2575:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 67,
										"keyType": {
											"id": 65,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2575:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 66,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2594:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 74,
									"name": "DiceRolled",
									"nameLocation": "2640:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2667:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2651:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "roller",
												"nameLocation": "2694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2678:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:51:0"
									},
									"src": "2634:68:0"
								},
								{
									"anonymous": false,
									"id": 80,
									"name": "DiceLanded",
									"nameLocation": "2714:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2741:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2725:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2768:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2752:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:51:0"
									},
									"src": "2708:68:0"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3035:149:0",
										"statements": [
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "COORDINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "3046:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 91,
																"name": "vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "3086:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 90,
															"name": "VRFCoordinatorV2Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3060:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$460_$",
																"typeString": "type(contract VRFCoordinatorV2Interface)"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3060:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"src": "3046:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
														"typeString": "contract VRFCoordinatorV2Interface"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "3046:55:0"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "3112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 96,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3122:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3122:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3112:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "3112:20:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "s_subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "3143:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "3162:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3143:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "3143:33:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2782:178:0",
										"text": " @notice Constructor inherits VRFConsumerBaseV2\n @dev NETWORK: Goerli\n @param subscriptionId subscription id that this consumer contract can use"
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 86,
													"name": "vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "3019:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 87,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 85,
												"name": "VRFConsumerBaseV2",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 364,
												"src": "3001:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3001:33:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "subscriptionId",
												"nameLocation": "2985:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2978:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 82,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2978:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:23:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3035:0:0"
									},
									"scope": 306,
									"src": "2966:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "4029:987:0",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "players",
														"nameLocation": "4114:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "4106:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "playerCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "4124:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4106:31:0"
											},
											{
												"body": {
													"id": 180,
													"nodeType": "Block",
													"src": "4186:823:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 130,
																		"name": "playerAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "4202:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 132,
																	"indexExpression": {
																		"id": 131,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "4218:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4202:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 133,
																	"name": "roller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "4224:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4202:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 178,
																"nodeType": "Block",
																"src": "4323:675:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 138,
																					"name": "roller",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 108,
																					"src": "4416:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 137,
																				"name": "storePlayer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "4404:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address) returns (address[] memory)"
																				}
																			},
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4404:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 140,
																		"nodeType": "ExpressionStatement",
																		"src": "4404:19:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 142,
																							"name": "s_results",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 68,
																							"src": "4450:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 144,
																						"indexExpression": {
																							"id": 143,
																							"name": "roller",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 108,
																							"src": "4460:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4450:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4471:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "4450:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416c726561647920726f6c6c6564",
																					"id": 147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4474:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde",
																						"typeString": "literal_string \"Already rolled\""
																					},
																					"value": "Already rolled"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f318a1b732b0806a03ad6af75ffb638e2d59fda395a579c8433a92cf55befdde",
																						"typeString": "literal_string \"Already rolled\""
																					}
																				],
																				"id": 141,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "4442:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4442:49:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 149,
																		"nodeType": "ExpressionStatement",
																		"src": "4442:49:0"
																	},
																	{
																		"expression": {
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 150,
																				"name": "requestId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "4581:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 153,
																						"name": "s_keyHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 20,
																						"src": "4646:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 154,
																						"name": "s_subscriptionId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "4678:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					{
																						"id": 155,
																						"name": "requestConfirmations",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "4717:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					{
																						"id": 156,
																						"name": "callbackGasLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 23,
																						"src": "4760:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					{
																						"id": 157,
																						"name": "numWords",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 29,
																						"src": "4799:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						},
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						{
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						{
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					],
																					"expression": {
																						"id": 151,
																						"name": "COORDINATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 12,
																						"src": "4593:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$460",
																							"typeString": "contract VRFCoordinatorV2Interface"
																						}
																					},
																					"id": 152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "requestRandomWords",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 393,
																					"src": "4593:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
																						"typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
																					}
																				},
																				"id": 158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4593:233:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4581:245:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 160,
																		"nodeType": "ExpressionStatement",
																		"src": "4581:245:0"
																	},
																	{
																		"expression": {
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 161,
																					"name": "s_rollers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 64,
																					"src": "4845:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																						"typeString": "mapping(uint256 => address)"
																					}
																				},
																				"id": 163,
																				"indexExpression": {
																					"id": 162,
																					"name": "requestId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 113,
																					"src": "4855:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4845:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 164,
																				"name": "roller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 108,
																				"src": "4868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4845:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 166,
																		"nodeType": "ExpressionStatement",
																		"src": "4845:29:0"
																	},
																	{
																		"expression": {
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 167,
																					"name": "s_results",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "4893:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 169,
																				"indexExpression": {
																					"id": 168,
																					"name": "roller",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 108,
																					"src": "4903:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4893:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 170,
																				"name": "ROLL_IN_PROGRESS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "4913:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4893:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 172,
																		"nodeType": "ExpressionStatement",
																		"src": "4893:36:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 174,
																					"name": "requestId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 113,
																					"src": "4964:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 175,
																					"name": "roller",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 108,
																					"src": "4975:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 173,
																				"name": "DiceRolled",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 74,
																				"src": "4953:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																					"typeString": "function (uint256,address)"
																				}
																			},
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4953:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 177,
																		"nodeType": "EmitStatement",
																		"src": "4948:34:0"
																	}
																]
															},
															"id": 179,
															"nodeType": "IfStatement",
															"src": "4198:800:0",
															"trueBody": {
																"id": 136,
																"nodeType": "Block",
																"src": "4232:85:0",
																"statements": [
																	{
																		"id": 135,
																		"nodeType": "Break",
																		"src": "4296:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 124,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "4168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 125,
														"name": "players",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "4172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4168:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"initializationExpression": {
													"assignments": [
														121
													],
													"declarations": [
														{
															"constant": false,
															"id": 121,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4161:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 181,
															"src": "4153:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 120,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4153:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 123,
													"initialValue": {
														"hexValue": "30",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4153:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4181:3:0",
														"subExpression": {
															"id": 127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "4181:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 129,
													"nodeType": "ExpressionStatement",
													"src": "4181:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4148:861:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3578:362:0",
										"text": " @notice Requests randomness\n @dev Warning: if the VRF response is delayed, avoid calling requestRandomness repeatedly\n as that would give miners/VRF operators latitude about which VRF response arrives first.\n @dev You must review your implementation details with extreme care.\n @param roller address of the roller"
									},
									"functionSelector": "e8ace5d7",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 110,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 305,
												"src": "3991:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3991:9:0"
										}
									],
									"name": "createPlayer",
									"nameLocation": "3955:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "roller",
												"nameLocation": "3976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:16:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "4018:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4010:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:19:0"
									},
									"scope": 306,
									"src": "3946:1070:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										337
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5949:163:0",
										"statements": [
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "d20Value",
														"nameLocation": "5968:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5960:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 195,
																		"name": "randomWords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "5980:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 197,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5992:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5980:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5997:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5980:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 200,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5979:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6003:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5979:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5960:44:0"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 204,
															"name": "s_results",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "6015:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 208,
														"indexExpression": {
															"baseExpression": {
																"id": 205,
																"name": "s_rollers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "6025:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 207,
															"indexExpression": {
																"id": 206,
																"name": "requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6035:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6025:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6015:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "d20Value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "6049:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6015:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6015:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 213,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6084:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 214,
															"name": "d20Value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "DiceLanded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6073:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6073:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "6068:36:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "5022:826:0",
										"text": " @notice Callback function used by VRF Coordinator to return the random number to this contract.\n @dev Some action on the contract state should be taken here, like storing the result.\n @dev WARNING: take care to avoid having multiple VRF requests in flight if their order of arrival would result\n in contract states with different outcomes. Otherwise miners or the VRF operator would could take advantage\n by controlling the order.\n @dev The VRF Coordinator will only send this function verified responses, and the parent VRFConsumerBaseV2\n contract ensures that this method only receives randomness from the designated VRFCoordinator.\n @param requestId uint256\n @param randomWords  uint256[] The random result returned by the oracle."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "5863:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5940:8:0"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5890:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5882:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "5918:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5901:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 187,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 188,
													"nodeType": "ArrayTypeName",
													"src": "5901:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5881:49:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5949:0:0"
									},
									"scope": 306,
									"src": "5854:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "6347:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 227,
																	"name": "s_results",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "6366:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 229,
																"indexExpression": {
																	"id": 228,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "6376:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6366:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6366:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44696365206e6f7420726f6c6c6564",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6390:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9",
																"typeString": "literal_string \"Dice not rolled\""
															},
															"value": "Dice not rolled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59ffb3a9a74222f0c97749be5af1e576cdabfe017118ddace802181fe2bbefe9",
																"typeString": "literal_string \"Dice not rolled\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "6358:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 236,
																	"name": "s_results",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "6427:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 238,
																"indexExpression": {
																	"id": 237,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "6437:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6427:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 239,
																"name": "ROLL_IN_PROGRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "6448:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6427:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c6c20696e2070726f6772657373",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6466:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228",
																"typeString": "literal_string \"Roll in progress\""
															},
															"value": "Roll in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d66d5788c212f49a9d8085bb649fc41870f4974bdfa53648d1515fdda871228",
																"typeString": "literal_string \"Roll in progress\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "6419:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 245,
																"name": "s_results",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "6512:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 247,
															"indexExpression": {
																"id": 246,
																"name": "player",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6522:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6512:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 244,
														"name": "getBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6503:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
															"typeString": "function (uint256) pure returns (uint8)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6503:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 225,
												"id": 249,
												"nodeType": "Return",
												"src": "6496:34:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6118:157:0",
										"text": " @notice Get the favor assigned to the player once the address has rolled\n @param player address\n @return favor as a string"
									},
									"functionSelector": "646f2a16",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collectBonus",
									"nameLocation": "6290:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "6311:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:16:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6340:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 223,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6339:7:0"
									},
									"scope": 306,
									"src": "6281:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6730:351:0",
										"statements": [
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "bonus",
														"nameLocation": "6814:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "6797:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
															"typeString": "uint8[20]"
														},
														"typeName": {
															"baseType": {
																"id": 262,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "6797:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 263,
															"length": {
																"hexValue": "3230",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6803:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"nodeType": "ArrayTypeName",
															"src": "6797:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$20_storage_ptr",
																"typeString": "uint8[20]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"components": [
														{
															"hexValue": "31",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "32",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6825:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"hexValue": "33",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														{
															"hexValue": "34",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "35",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														{
															"hexValue": "36",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6833:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														{
															"hexValue": "37",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6835:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														{
															"hexValue": "38",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														{
															"hexValue": "39",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														{
															"hexValue": "3130",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6841:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "3131",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6844:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														{
															"hexValue": "3132",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6847:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														},
														{
															"hexValue": "3133",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6850:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															},
															"value": "13"
														},
														{
															"hexValue": "3134",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6853:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														},
														{
															"hexValue": "3135",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6856:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "15"
														},
														{
															"hexValue": "3136",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														{
															"hexValue": "3137",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6862:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_17_by_1",
																"typeString": "int_const 17"
															},
															"value": "17"
														},
														{
															"hexValue": "3138",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														{
															"hexValue": "3139",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6868:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_19_by_1",
																"typeString": "int_const 19"
															},
															"value": "19"
														},
														{
															"hexValue": "3230",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6871:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"id": 285,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6822:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
														"typeString": "uint8[20] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6797:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 287,
														"name": "bonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "7060:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
															"typeString": "uint8[20] memory"
														}
													},
													"id": 291,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 288,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "7066:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7071:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7066:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7060:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 258,
												"id": 292,
												"nodeType": "Return",
												"src": "7053:20:0"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "6546:120:0",
										"text": " @notice get a random one time bonus from the id\n @param id uint256\n @return bonus int"
									},
									"functionSelector": "4aa66b28",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBonus",
									"nameLocation": "6681:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6698:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6690:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:12:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6723:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 256,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6722:7:0"
									},
									"scope": 306,
									"src": "6672:409:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "7108:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 297,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7127:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 299,
																"name": "s_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "7141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7127:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "7119:30:0"
											},
											{
												"id": 303,
												"nodeType": "PlaceholderStatement",
												"src": "7160:1:0"
											}
										]
									},
									"id": 305,
									"name": "onlyOwner",
									"nameLocation": "7096:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7105:2:0"
									},
									"src": "7087:82:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 307,
							"src": "577:6595:0",
							"usedErrors": [
								315
							]
						}
					],
					"src": "33:7141:0"
				},
				"id": 0
			},
			"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
					"exportedSymbols": {
						"VRFConsumerBaseV2": [
							364
						]
					},
					"id": 365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "57:5275:1",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
							},
							"fullyImplemented": false,
							"id": 364,
							"linearizedBaseContracts": [
								364
							],
							"name": "VRFConsumerBaseV2",
							"nameLocation": "5351:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 315,
									"name": "OnlyCoordinatorCanFulfill",
									"nameLocation": "5379:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "5413:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5405:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "want",
												"nameLocation": "5427:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5419:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:28:1"
									},
									"src": "5373:60:1"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nameLocation": "5462:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 364,
									"src": "5436:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 316,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5436:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "5593:43:1",
										"statements": [
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5599:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "5616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5599:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "5599:32:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "5481:72:1",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract"
									},
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "5576:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "5568:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:25:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5593:0:1"
									},
									"scope": 364,
									"src": "5556:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "5640:686:1",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
									},
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "6338:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6365:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "6357:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6393:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "6376:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 332,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6376:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 333,
													"nodeType": "ArrayTypeName",
													"src": "6376:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:49:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6422:0:1"
									},
									"scope": 364,
									"src": "6329:94:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "6707:167:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 345,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6717:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6717:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 347,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "6731:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6717:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 356,
												"nodeType": "IfStatement",
												"src": "6713:109:1",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "6747:75:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 350,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6788:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6788:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 352,
																		"name": "vrfCoordinator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "6800:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 349,
																	"name": "OnlyCoordinatorCanFulfill",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6762:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6762:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 354,
															"nodeType": "RevertStatement",
															"src": "6755:60:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 358,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6846:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 359,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6857:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 357,
														"name": "fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "6827:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] memory)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6827:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "6827:42:1"
											}
										]
									},
									"functionSelector": "1fe543e3",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "6627:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6657:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6649:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6685:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6668:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 340,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6668:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 341,
													"nodeType": "ArrayTypeName",
													"src": "6668:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6648:49:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6707:0:1"
									},
									"scope": 364,
									"src": "6618:256:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 365,
							"src": "5333:1543:1",
							"usedErrors": [
								315
							]
						}
					],
					"src": "32:6845:1"
				},
				"id": 1
			},
			"node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
					"exportedSymbols": {
						"VRFCoordinatorV2Interface": [
							460
						]
					},
					"id": 461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460
							],
							"name": "VRFCoordinatorV2Interface",
							"nameLocation": "67:25:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "97:267:2",
										"text": " @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"
									},
									"functionSelector": "00012291",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestConfig",
									"nameLocation": "376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "437:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 369,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "451:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 371,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "451:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "465:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 373,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "465:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 374,
													"nodeType": "ArrayTypeName",
													"src": "465:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:58:2"
									},
									"scope": 460,
									"src": "367:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "492:1511:2",
										"text": " @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
									},
									"functionSelector": "5d3b1d30",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomWords",
									"nameLocation": "2015:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "keyHash",
												"nameLocation": "2047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2067:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2060:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 381,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2060:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "minimumRequestConfirmations",
												"nameLocation": "2085:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2078:34:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 383,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2078:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2125:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2118:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 385,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2118:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "2154:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2147:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 387,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2147:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:133:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2193:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2185:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:19:2"
									},
									"scope": 460,
									"src": "2006:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2208:384:2",
										"text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"
									},
									"functionSelector": "a21a23e4",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSubscription",
									"nameLocation": "2604:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2622:2:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2643:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 396,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2643:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2642:14:2"
									},
									"scope": 460,
									"src": "2595:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2661:381:2",
										"text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
									},
									"functionSelector": "a47c7696",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscription",
									"nameLocation": "3054:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3077:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3070:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 401,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3070:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:14:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3133:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3126:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 404,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3126:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "reqCount",
												"nameLocation": "3155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3148:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 406,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3148:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "consumers",
												"nameLocation": "3209:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3192:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 410,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3192:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 411,
													"nodeType": "ArrayTypeName",
													"src": "3192:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:106:2"
									},
									"scope": 460,
									"src": "3045:180:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "3229:164:2",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
									},
									"functionSelector": "04c357cb",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSubscriptionOwnerTransfer",
									"nameLocation": "3405:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3445:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 416,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3438:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3460:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3452:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:32:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3478:0:2"
									},
									"scope": 460,
									"src": "3396:83:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3483:212:2",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
									},
									"functionSelector": "82359740",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptSubscriptionOwnerTransfer",
									"nameLocation": "3707:31:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 424,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:14:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3761:0:2"
									},
									"scope": 460,
									"src": "3698:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "3766:170:2",
										"text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
									},
									"functionSelector": "7341c10c",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addConsumer",
									"nameLocation": "3948:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3967:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3960:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 430,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3960:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "3982:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3974:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3959:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4000:0:2"
									},
									"scope": 460,
									"src": "3939:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "4005:172:2",
										"text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
									},
									"functionSelector": "9f87fad7",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeConsumer",
									"nameLocation": "4189:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4211:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4204:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 438,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4204:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "4226:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4218:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4203:32:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:0:2"
									},
									"scope": 460,
									"src": "4180:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "4249:140:2",
										"text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
									},
									"functionSelector": "d7ae1d30",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "4401:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "4420:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 446,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4420:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "4434:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:26:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:2"
									},
									"scope": 460,
									"src": "4392:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e82ad7d4",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRequestExists",
									"nameLocation": "4760:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4788:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 453,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4781:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4818:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4818:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:6:2"
									},
									"scope": 460,
									"src": "4751:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 461,
							"src": "57:4769:2",
							"usedErrors": []
						}
					],
					"src": "32:4795:2"
				},
				"id": 2
			}
		}
	}
}